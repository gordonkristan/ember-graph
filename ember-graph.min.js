!function(){window.EmberGraph=window.Eg=window.EG=Em.Namespace.create({VERSION:"0.1.0"}),Ember.libraries&&Ember.libraries.register("Ember Graph",EG.VERSION)}(),function(){Em&&Em.onLoad("Ember.Application",function(Application){Application.initializer({name:"store",initialize:function(container,App){App.register("store:main",App.Store||EG.Store,{singleton:!0}),App.register("adapter:rest",EG.RESTAdapter,{singleton:!0}),App.register("adapter:fixture",EG.FixtureAdapter,{singleton:!0}),App.register("serializer:json",EG.JSONSerializer,{singleton:!0}),App.register("type:string",EG.StringType,{singleton:!0}),App.register("type:number",EG.NumberType,{singleton:!0}),App.register("type:boolean",EG.BooleanType,{singleton:!0}),App.register("type:date",EG.DateType,{singleton:!0}),App.register("type:object",EG.ObjectType,{singleton:!0}),App.register("type:array",EG.ArrayType,{singleton:!0}),container.lookup("store:main")}}),Application.initializer({name:"injectStore",before:"store",initialize:function(container,App){App.inject("controller","store","store:main"),App.inject("route","store","store:main"),App.inject("adapter","store","store:main"),App.inject("serializer","store","store:main")}})})}(),function(){Eg.util={generateGUID:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0,v="x"==c?r:3&r|8;return v.toString(16)})},values:function(obj){return Em.keys(obj).map(function(key){return obj[key]})}}}(),function(){Em.Set.reopen({withoutAll:function(items){var ret=this.copy();return ret.removeObjects(items),ret}})}(),function(){Eg.String={startsWith:function(string,prefix){return 0===string.indexOf(prefix)},endsWith:function(string,suffix){return string.indexOf(suffix,this.length-suffix.length)>=0},capitalize:function(string){return string[0].toLocaleUpperCase()+string.substring(1)},decapitalize:function(string){return string[0].toLocaleLowerCase()+string.substring(1)}},(Em.EXTEND_PROTOTYPES===!0||Em.EXTEND_PROTOTYPES.String)&&(String.prototype.startsWith=String.prototype.startsWith||function(prefix){return Eg.String.startsWith(this,prefix)},String.prototype.endsWith=String.prototype.endsWith||function(suffix){return Eg.String.endsWith(this,suffix)},String.prototype.capitalize=String.prototype.capitalize||function(){return Eg.String.capitalize(this)},String.prototype.decapitalize=String.prototype.decapitalize||function(){return Eg.String.decapitalize(this)})}(),function(){var uncountableWords=["equipment","information","rice","money","species","series","fish","sheep","moose","deer","news"],pluralRules=[[/(m)an$/gi,"$1en"],[/(pe)rson$/gi,"$1ople"],[/(child)$/gi,"$1ren"],[/^(ox)$/gi,"$1en"],[/(ax|test)is$/gi,"$1es"],[/(octop|vir)us$/gi,"$1i"],[/(alias|status)$/gi,"$1es"],[/(bu)s$/gi,"$1ses"],[/(buffal|tomat|potat)o$/gi,"$1oes"],[/([ti])um$/gi,"$1a"],[/sis$/gi,"ses"],[/(?:([^f])fe|([lr])f)$/gi,"$1$2ves"],[/(hive)$/gi,"$1s"],[/([^aeiouy]|qu)y$/gi,"$1ies"],[/(x|ch|ss|sh)$/gi,"$1es"],[/(matr|vert|ind)ix|ex$/gi,"$1ices"],[/([m|l])ouse$/gi,"$1ice"],[/(quiz)$/gi,"$1zes"],[/s$/gi,"s"],[/$/gi,"s"]],singularRules=[[/(m)en$/gi,"$1an"],[/(pe)ople$/gi,"$1rson"],[/(child)ren$/gi,"$1"],[/([ti])a$/gi,"$1um"],[/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/gi,"$1$2sis"],[/(hive)s$/gi,"$1"],[/(tive)s$/gi,"$1"],[/(curve)s$/gi,"$1"],[/([lr])ves$/gi,"$1f"],[/([^fo])ves$/gi,"$1fe"],[/([^aeiouy]|qu)ies$/gi,"$1y"],[/(s)eries$/gi,"$1eries"],[/(m)ovies$/gi,"$1ovie"],[/(x|ch|ss|sh)es$/gi,"$1"],[/([m|l])ice$/gi,"$1ouse"],[/(bus)es$/gi,"$1"],[/(o)es$/gi,"$1"],[/(shoe)s$/gi,"$1"],[/(cris|ax|test)es$/gi,"$1is"],[/(octop|vir)i$/gi,"$1us"],[/(alias|status)es$/gi,"$1"],[/^(ox)en/gi,"$1"],[/(vert|ind)ices$/gi,"$1ex"],[/(matr)ices$/gi,"$1ix"],[/(quiz)zes$/gi,"$1"],[/s$/gi,""]],apply=function(str,rules){if(uncountableWords.indexOf(str)>=0)return str;for(var i=0;i<rules.length;i+=1)if(str.match(rules[i][0]))return str.replace(rules[i][0],rules[i][1]);return str};Eg.String.pluralize=function(str){return apply(str,pluralRules)},Eg.String.singularize=function(str){return apply(str,singularRules)},(Em.EXTEND_PROTOTYPES===!0||Em.EXTEND_PROTOTYPES.String)&&(String.prototype.pluralize=String.prototype.pluralize||function(){return Eg.String.pluralize(this)},String.prototype.singularize=String.prototype.singularize||function(){return Eg.String.singularize(this)})}(),function(){var methodMissing=function(method){return new Error("Your serializer failed to implement the '"+method+"' method.")};EG.Serializer=Em.Object.extend({store:null,serialize:function(){throw methodMissing("serialize")},deserialize:function(){throw methodMissing("deserialize")}})}(),function(){EG.JSONSerializer=EG.Serializer.extend({serialize:function(record,options){options=options||{};var json={};return options.includeId&&(json.id=record.get("id")),record.constructor.eachAttribute(function(name,meta){var type=this.get("store").attributeTypeFor(meta.type);json[name]=type.serialize(record.get(name))},this),Em.get(record.constructor,"relationships").length>0&&(json.links={}),record.constructor.eachRelationship(function(name,meta){var val=record.get("_"+name);json.links[name]=meta.kind===EG.Model.HAS_MANY_KEY?val.filter(function(id){return!EG.Model.isTemporaryId(id)}):null===val||EG.Model.isTemporaryId(val)?null:val}),json},deserialize:function(payload,options){if(!payload||0===Em.keys(payload).length)return{};var json=this._extract(payload),ids=null;if(options&&options.isQuery){var keys=new Em.Set(Em.keys(payload)).withoutAll(["meta","linked"]);ids=payload[Em.get(keys,"firstObject")].map(function(json){return""+json.id})}return Em.keys(json).forEach(function(typeKey){json[typeKey]=json[typeKey].map(function(record){return this._deserializeSingle(typeKey,record)},this).filter(function(item){return!!item})},this),Em.isArray(ids)&&(json.ids=ids),json},_extract:function(payload){var json=payload.hasOwnProperty("linked")?this._extract(payload.linked):{};return Em.keys(payload).forEach(function(key){if("linked"!==key&&"meta"!==key){var typeKey=key.singularize();json[typeKey]=payload[key].concat(json[typeKey]||[])}},this),json},_deserializeSingle:function(typeKey,json){try{if(json=json||{},json.links=json.links||{},"string"!=typeof json.id&&"number"!=typeof json.id)throw new Error("Your JSON was missing an ID.");var model=this.get("store").modelForType(typeKey),record={id:json.id+""};return EG.debug(function(){var attributes=Em.get(model,"attributes"),givenAttributes=new Em.Set(Em.keys(json));givenAttributes.removeObjects(["id","links"]);var extra=givenAttributes.withoutAll(attributes);if(extra.length>0)throw new Error("Your JSON contained extra attributes: "+extra.toArray().join(","));model.eachAttribute(function(name,meta){if(!json.hasOwnProperty(name)&&meta.isRequired)throw new Error("Your JSON is missing the required `"+name+"` attribute.")})}),Em.keys(json).forEach(function(attribute){if("id"!==attribute&&"links"!==attribute){var meta=model.metaForAttribute(attribute),type=this.get("store").attributeTypeFor(meta.type);record[attribute]=type.deserialize(json[attribute])}},this),EG.debug(function(){var relationships=Em.get(model,"relationships"),givenRelationships=new Em.Set(Em.keys(json.links)),extra=givenRelationships.withoutAll(relationships);if(extra.length>0)throw new Error("Your JSON contained extra relationships: "+extra.toArray().join(","));model.eachRelationship(function(name,meta){if(!json.links.hasOwnProperty(name)&&meta.isRequired)throw new Error("Your JSON is missing the required `"+name+"` relationship.")})}),Em.keys(json.links).forEach(function(relationship){var meta=model.metaForRelationship(relationship);record[relationship]=meta.kind===EG.Model.HAS_MANY_KEY?json.links[relationship].map(function(id){return""+id}):""+json.links[relationship]}),record}catch(e){return null}}})}(),function(){var missingMethod=function(method){return new Error("Your adapter failed to implement the '"+method+"' method.")};EG.Adapter=Em.Object.extend({container:null,store:null,defaultSerializer:"json",serializer:Em.computed(function(){var container=this.get("container"),serializer=container.lookup("serializer:application")||container.lookup("serializer:"+this.get("defaultSerializer"));return serializer}).property().readOnly(),createRecord:function(){throw missingMethod("createRecord")},findRecord:function(){throw missingMethod("findRecord")},findMany:function(){throw missingMethod("findMany")},findAll:function(){throw missingMethod("findAll")},findQuery:function(){throw missingMethod("findQuery")},updateRecord:function(){throw missingMethod("updateRecord")},deleteRecord:function(){throw missingMethod("deleteRecord")},serialize:function(record,options){return this.get("serializer").serialize(record,options)},deserialize:function(payload,options){return this.get("serializer").deserialize(payload,options)}})}(),function(){var removeEmpty=function(item){return!Em.isEmpty(item)};Eg.FixtureAdapter=Eg.Adapter.extend({_getRecord:function(typeKey,id){var model=this.get("store").modelForType(typeKey);model.FIXTURES=model.FIXTURES||[];for(var i=0;i<model.FIXTURES.length;i+=1)if(model.FIXTURES[i].id===id)return model.FIXTURES[i];return null},_getRecords:function(typeKey){return this.get("store").modelForType(typeKey).FIXTURES||[]},_setRecord:function(typeKey,json){var model=this.get("store").modelForType(typeKey);model.FIXTURES=model.FIXTURES||[];for(var i=0;i<model.FIXTURES.length;i+=1)if(model.FIXTURES[i].id===json.id)return void(model.FIXTURES[i]=json);model.FIXTURES.push(json)},_deleteRecord:function(typeKey,id){var model=this.get("store").modelForType(typeKey);model.FIXTURES=model.FIXTURES||[];for(var i=0;i<model.FIXTURES.length;i+=1)if(model.FIXTURES[i].id===id)return void model.FIXTURES.splice(i,1)},createRecord:function(record){record.set("id",Eg.util.generateGUID());var json=this.serialize(record);return this._setRecord(record.typeKey,json),Em.RSVP.Promise.resolve({})},findRecord:function(typeKey,id){var json={};return json[typeKey]=[this._getRecord(typeKey,id)].filter(removeEmpty),Em.RSVP.Promise.resolve(json)},findMany:function(typeKey,ids){var json={};return json[typeKey]=ids.map(function(id){return this._getRecord(typeKey,id)},this).filter(removeEmpty),Em.RSVP.Promise.resolve(json)},findAll:function(typeKey){var json={};return json[typeKey]=this._getRecords(typeKey),Em.RSVP.Promise.resolve(json)},findQuery:function(){throw new Error("The fixture adapter doesn't implement `findQuery`.")},updateRecord:function(record){var json=this.serialize(record);return this._setRecord(record.typeKey,json),Em.RSVP.Promise.resolve({})},deleteRecord:function(record){return this._deleteRecord(record.typeKey,record.get("id")),Em.RSVP.Promise.resolve({})},serialize:function(record){var json={};return json.id=record.get("id"),record.constructor.eachAttribute(function(name){json[name]=record.get(name)}),record.constructor.eachRelationship(function(name,meta){json[name]=record.get("_"+name),meta.kind===Eg.Model.HAS_MANY_KEY&&(json[name]=json[name].toArray())}),json}})}(),function(){EG.RESTAdapter=EG.Adapter.extend({createRecord:function(record){var url=this._buildUrl(record.typeKey,null),json=this.serialize(record,{includeId:!1});return this._ajax(url,"POST",{},json).then(function(payload){return this.deserialize(payload)}.bind(this))},findRecord:function(typeKey,id){var url=this._buildUrl(typeKey,id);return this._ajax(url,"GET").then(function(payload){return this.deserialize(payload)}.bind(this))},findMany:function(typeKey,ids){var url=this._buildUrl(typeKey,ids.join());return this._ajax(url,"GET").then(function(payload){return this.deserialize(payload)}.bind(this))},findAll:function(typeKey){var url=this._buildUrl(typeKey,null);return this._ajax(url,"GET").then(function(payload){return this.deserialize(payload)}.bind(this))},findQuery:function(typeKey,query){var options={};Em.keys(query).forEach(function(key){options[key]=""+query[key]});var url=this._buildUrl(typeKey,null,options);return this._ajax(url,"GET").then(function(payload){return this.deserialize(payload,{isQuery:!0})}.bind(this))},updateRecord:function(record){var url=this._buildUrl(record.typeKey,record.get("id")),json=this.serialize(record,{includeId:!0});return this._ajax(url,"PUT",{},json).then(function(payload){return this.deserialize(payload)}.bind(this))},deleteRecord:function(record){var url=this._buildUrl(record.typeKey,record.get("id"));return this._ajax(url,"DELETE").then(function(payload){return this.deserialize(payload)||{}}.bind(this))},_buildUrl:function(typeKey,id,options){var url=this._prefix()+"/";return url+=id?typeKey+"/"+id:EG.String.pluralize(typeKey),options&&Em.keys(options).forEach(function(key,index){url+=(0===index?"?":"&")+key+"="+encodeURIComponent(options[key])}),url},_prefix:function(){return""},_ajax:function(url,verb,headers,body){return new Em.RSVP.Promise(function(resolve,reject){$.ajax({cache:!1,contentType:"application/json",data:void 0===body?void 0:"string"==typeof body?body:JSON.stringify(body),headers:headers||{},processData:!1,type:verb,url:url,error:function(jqXHR,textStatus,error){Em.run(null,reject,error)},success:function(data){Em.run(null,resolve,data)}})})}})}(),function(){Eg.Store=Em.Object.extend({defaultAdapter:"rest",container:null,cacheTimeout:1/0,_records:{},adapter:function(){var container=this.get("container"),adapter=container.lookup("adapter:application")||container.lookup("adapter:"+this.get("defaultAdapter"));return adapter}.property(),init:function(){this.set("_records",{}),this.set("_types",{}),this.set("_queuedRelationships",{}),EG.Relationship.deleteAllRelationships()},_getRecord:function(typeKey,id){var records=this.get("_records");return records[typeKey]=records[typeKey]||{},records[typeKey][id]},_setRecord:function(typeKey,record){var records=this.get("_records");records[typeKey]=records[typeKey]||{},records[typeKey][record.get("id")]={record:record,timestamp:(new Date).getTime()}},_deleteRecord:function(typeKey,id){var records=this.get("_records");records[typeKey]=records[typeKey]||{},delete records[typeKey][id]},modelForType:function(typeKey){this._modelCache=this._modelCache||{};var factory=this.get("container").lookupFactory("model:"+typeKey);return this._modelCache[typeKey]||(this._modelCache[typeKey]=factory,factory.reopen({typeKey:typeKey}),factory.reopenClass({typeKey:typeKey})),factory},createRecord:function(typeKey,json){json=json||{};var record=this.modelForType(typeKey)._create();return record.set("store",this),record.set("id",Eg.Model.temporaryIdPrefix+Eg.util.generateGUID()),this._setRecord(typeKey,record),record._loadData(json),record},_loadRecord:function(typeKey,json){var record=this.modelForType(typeKey)._create();return record.set("store",this),record.set("id",json.id),this._setRecord(typeKey,record),this._hasQueuedRelationships(typeKey,json.id)&&this._connectQueuedRelationships(record),record._loadData(json),record},_recordsForType:function(typeKey){var records=this.get("_records."+typeKey)||{},timeout=(new Date).getTime()-this.get("cacheTimeout");return Em.keys(records).map(function(id){var recordShell=records[id];return recordShell.timestamp>=timeout?recordShell.record:void 0})},find:function(typeKey,options){return"string"==typeof options?this._findSingle(typeKey,options):Em.isArray(options)?this._findMany(typeKey,options):"object"==typeof options?this._findQuery(typeKey,options):this._findAll(typeKey)},getRecord:function(typeKey,id){var record=this._getRecord(typeKey,id),timeout=(new Date).getTime()-this.get("cacheTimeout");return record&&record.record?record.timestamp>=timeout?record.record:null:null},_findSingle:function(type,id){var promise,record=this.getRecord(type,id);return promise=record?Em.RSVP.Promise.resolve(record):this.get("adapter").findRecord(type,id).then(function(payload){return this.extractPayload(payload),this.getRecord(type,id)}.bind(this)),Eg.PromiseObject.create({promise:promise})},_findMany:function(type,ids){ids=ids||[];var set=new Em.Set(ids);ids.forEach(function(id){null!==this.getRecord(type,id)&&set.removeObject(id)},this);var promise;return promise=0===set.length?Em.RSVP.Promise.resolve(ids.map(function(id){return this.getRecord(type,id)},this)):this.get("adapter").findMany(type,set.toArray()).then(function(payload){return this.extractPayload(payload),ids.map(function(id){return this.getRecord(type,id)},this).toArray()}.bind(this)),Eg.PromiseArray.create({promise:promise})},_findAll:function(type){var promise=this.get("adapter").findAll(type).then(function(payload){return this.extractPayload(payload),this._recordsForType(type)}.bind(this));return Eg.PromiseArray.create({promise:promise})},_findQuery:function(typeKey,options){var promise=this.get("adapter").findQuery(typeKey,options).then(function(payload){var ids=payload.ids;return delete payload.ids,this.extractPayload(payload),ids.map(function(id){return this.getRecord(typeKey,id)},this)}.bind(this));return Eg.PromiseArray.create({promise:promise})},hasRecord:function(type,id){return null!==this.getRecord(type,id)},saveRecord:function(record){var type=record.typeKey,isNew=record.get("isNew"),tempId=record.get("id");return record.set("isSaving",!0),isNew?this.get("adapter").createRecord(record).then(function(payload){return record.set("id",payload.id),record.set("isSaving",!1),delete payload.id,this._deleteRecord(type,tempId),this._setRecord(type,record),this.extractPayload(payload),record}.bind(this)):this.get("adapter").updateRecord(record).then(function(payload){return this.extractPayload(payload),record.set("isSaving",!1),record}.bind(this))},deleteRecord:function(record){{var type=record.typeKey,id=record.get("id");this.get("_records."+type)||{}}return record.set("isSaving",!0),record.set("isDeleted",!0),this.get("adapter").deleteRecord(record).then(function(payload){this.extractPayload(payload),record.set("isSaving",!1),delete this.get("_records."+type)[id]}.bind(this))},reloadRecord:function(record){return record.set("isReloading",!0),this.get("adapter").find(record.typeKey,record.get("id")).then(function(payload){return this.extractPayload(payload),record.set("isReloading",!1),record}.bind(this))},extractPayload:function(payload){var reloadDirty=this.get("reloadDirty");Em.keys(payload).forEach(function(typeKey){this.modelForType(typeKey);payload[typeKey].forEach(function(json){var record=this.getRecord(typeKey,json.id);record?(!record.get("isDirty")||reloadDirty)&&record._loadData(json):this._loadRecord(typeKey,json)},this)},this)},attributeTypeFor:function(type){var attributeType=this.get("container").lookup("type:"+type);return attributeType}})}(),function(){Eg.Store.reopen({reloadDirty:!0,sideWithClientOnConflict:!0,overwriteClientAttributes:!1,_queuedRelationships:null,_hasQueuedRelationships:function(typeKey,id){for(var queued=Eg.util.values(this.get("_queuedRelationships")),i=0;i<queued.length;i+=1)if(queued[i].get("type2")===typeKey&&queued[i].get("object2")===id)return!0;return!1},_connectQueuedRelationships:function(record){var queued=this.get("_queuedRelationships"),toConnect=this._queuedRelationshipsFor(record.typeKey,record.get("id"));toConnect.forEach(function(relationship){record._connectRelationship(relationship),relationship.set("object2",record),delete queued[relationship.get("id")]}),this.notifyPropertyChange("_queuedRelationships")},_queuedRelationshipsFor:function(typeKey,id){return Eg.util.values(this.get("_queuedRelationships")).filter(function(relationship){return relationship.get("type2")===typeKey&&relationship.get("object2")===id})},_createRelationship:function(type1,relationship1,id1,type2,relationship2,id2,state){var record1=this.getRecord(type1,id1),record2=this.getRecord(type2,id2);if(null!==record1||null!==record2){if(null===record1){var temp=record1;record1=record2,record2=temp,temp=id1,id1=id2,id2=id1,temp=relationship1,relationship1=relationship2,relationship2=temp}if(null!==relationship1&&!record1._isLinkedTo(relationship1,id2)){var relationship=Eg.Relationship.create({object1:record1,relationship1:relationship1,object2:null===record2?id2:record2,relationship2:relationship2,state:state});record1._connectRelationship(relationship),null!==record2?record2._connectRelationship(relationship):(this.set("_queuedRelationships."+relationship.get("id"),relationship),this.notifyPropertyChange("_queuedRelationships"))}}},_deleteRelationship:function(id){var relationship=Eg.Relationship.getRelationship(id);if(!Em.isNone(relationship)){var object1=relationship.get("object1"),object2=relationship.get("object2");object1._disconnectRelationship(relationship),object2 instanceof Eg.Model?object2._disconnectRelationship(relationship):(delete this.get("_queuedRelationships")[id],this.notifyPropertyChange("_queuedRelationships")),Eg.Relationship.deleteRelationship(id)}},_changeRelationshipState:function(id,state){var relationship=Eg.Relationship.getRelationship(id);if(!Em.isNone(relationship)&&relationship.get("state")!==state){var object1=relationship.get("object1"),object2=relationship.get("object2"),oldHash=Eg.Relationship.stateToHash(relationship.get("state")),newHash=Eg.Relationship.stateToHash(state);relationship.set("state",state),object1.set(newHash+"."+id,object1.get(oldHash+"."+id)),delete object1.get(oldHash)[id],object1.notifyPropertyChange(oldHash),object1.notifyPropertyChange(newHash),object2 instanceof Eg.Model&&(object2.set(newHash+"."+id,object2.get(oldHash+"."+id)),delete object2.get(oldHash)[id],object2.notifyPropertyChange(oldHash),object2.notifyPropertyChange(newHash))}}})}(),function(){Eg.PromiseObject=Em.ObjectProxy.extend(Em.PromiseProxyMixin),Eg.PromiseArray=Em.ArrayProxy.extend(Em.PromiseProxyMixin)}(),function(){var NEW_STATE="new",SAVED_STATE="saved",DELETED_STATE="deleted",nextRelationshipId=0,allRelationships={};Eg.Relationship=Em.Object.extend({id:null,state:function(){var state=NEW_STATE;return function(key,value){if(arguments.length>1){if(value!==NEW_STATE&&value!==SAVED_STATE&&value!==DELETED_STATE)throw new Error("'"+value+"' is an invalid relationship state.");state=value}return state}}(),object1:null,relationship1:null,type1:null,object2:null,relationship2:null,type2:null,oneWay:function(){return null===this.get("relationship2")}.property("relationship2"),init:function(){this.set("id",nextRelationshipId+""),nextRelationshipId+=1},isNew:function(){return this.get("state")===NEW_STATE},isSaved:function(){return this.get("state")===SAVED_STATE},isDeleted:function(){return this.get("state")===DELETED_STATE},otherId:function(record){if(this.get("object1")===record){var object2=this.get("object2");return"string"==typeof object2?object2:object2.get("id")}return this.get("object1.id")},otherRecord:function(record){var object1=this.get("object1");if(object1===record){var object2=this.get("object2");if("string"==typeof object2){var inverse=object1.constructor.metaForRelationship(this.get("relationship1")).relatedType;return object1.get("store").getRecord(inverse,object2)}return object2}return object1},relationshipName:function(record){return this.get("object1")===record?this.get("relationship1"):this.get("object2")===record?this.get("relationship2"):void 0}}),Eg.Relationship.reopenClass({NEW_STATE:NEW_STATE,SAVED_STATE:SAVED_STATE,DELETED_STATE:DELETED_STATE,create:function(properties){var relationship=this._super();return relationship.setProperties(properties),relationship.set("type1",properties.object1.typeKey),properties.object2 instanceof Eg.Model?relationship.set("type2",properties.object2.typeKey):relationship.set("type2",properties.object1.constructor.metaForRelationship(properties.relationship1).relatedType),allRelationships[relationship.get("id")]=relationship,relationship},getRelationship:function(id){return allRelationships[id]},deleteRelationship:function(id){delete allRelationships[id]},deleteAllRelationships:function(){allRelationships={}},stateToHash:function(state){switch(state){case NEW_STATE:return"_clientRelationships";case SAVED_STATE:return"_serverRelationships";case DELETED_STATE:return"_deletedRelationships";default:return""}},relationshipsForRecord:function(typeKey,name,id){return Eg.util.values(allRelationships).filter(function(relationship){if(relationship.get("type1")===typeKey&&relationship.get("id")===id&&relationship.get("relationship1")===name)return!0;if(relationship.get("type2")===typeKey&&relationship.get("relationship2")===name){var object2=relationship.get("object2");if("string"==typeof object2){if(object2===id)return!0}else if(object2.get("id")===id)return!0}return!1})}})}(),function(){EG.AttributeType=Em.Object.extend({defaultValue:null,serialize:function(obj){return obj},deserialize:function(json){return json},isValid:function(){return!0},isEqual:function(a,b){return a===b}})}(),function(){EG.BooleanType=EG.AttributeType.extend({defaultValue:!1,serialize:function(obj){return!!obj},deserialize:function(json){return!!json},isValid:function(obj){return"boolean"==typeof obj}})}(),function(){EG.DateType=EG.AttributeType.extend({serialize:function(obj){return obj instanceof Date?obj.getTime():"number"==typeof obj?obj:"string"==typeof obj?new Date(obj).getTime():null},deserialize:function(){return"number"==typeof obj||"string"==typeof obj?new Date(obj):null},isValid:function(obj){return null===obj||obj instanceof Date},isEqual:function(a,b){var aNone=null===a,bNone=null===b;return aNone&&bNone?!0:aNone&&!bNone||!aNone&&bNone?!1:new Date(a).getTime()===new Date(b).getTime()}})}(),function(){EG.NumberType=EG.AttributeType.extend({defaultValue:0,serialize:function(obj){return Number(obj)||0},deserialize:function(json){return Number(json)||0},isValid:function(obj){return"number"==typeof obj}})}(),function(){EG.StringType=EG.AttributeType.extend({serialize:function(obj){return null===obj?null:""+obj},deserialize:function(json){return null===json?null:""+json},isValid:function(obj){return null===obj||"string"==typeof obj}})}(),function(){var isObject=function(obj){return!Em.isNone(obj)&&"object"==typeof obj&&obj.constructor===Object},deepCompare=function(a,b){if(isObject(a)&&isObject(b)){if(!new Em.Set(Em.keys(a)).isEqual(new Em.Set(Em.keys(b))))return!1;for(var keys=Em.keys(a),i=0;i<keys.length;i+=1)if(!deepCompare(a[keys[i]],b[keys[i]]))return!1;return!0}return Em.isArray(a)&&Em.isArray(b)?0===Em.compare(a,b):a===b};EG.ObjectType=EG.AttributeType.extend({serialize:function(obj){if(!isObject(obj))return null;try{return JSON.stringify(obj),obj}catch(e){return null}},deserialize:function(json){return isObject(json)?json:null},isValid:function(obj){try{return JSON.stringify(obj),isObject(obj)}catch(e){return!1}},isEqual:function(a,b){return isObject(a)&&isObject(b)?deepCompare(a,b):!1}})}(),function(){EG.ArrayType=EG.AttributeType.extend({serialize:function(obj){return Em.isNone(obj)?null:(obj=obj.toArray?obj.toArray():obj,Em.isArray(obj)?obj:null)},deserialize:function(json){return Em.isArray(json)?json:null},isValid:function(obj){try{return JSON.stringify(obj),isObject(obj)}catch(e){return!1}},isEqual:function(a,b){return Em.isArray(a)&&Em.isArray(b)?0===Em.compare(a.toArray(),b.toArray()):!1}})}(),function(){Eg.Model=Em.Object.extend(Em.Evented,{typeKey:null,_id:null,id:function(key,value){var id=this.get("_id");if(arguments.length>1){var prefix=this.constructor.temporaryIdPrefix;if(null===id)return this.set("_id",value),value;if(Eg.String.startsWith(id,prefix)&&!Eg.String.startsWith(value,prefix))return this.set("_id",value),value;throw new Error("Cannot change the 'id' property of a model.")}return id}.property("_id"),store:null,isDeleted:null,isSaving:null,isReloading:null,isLoaded:function(){return null!==this.get("store")}.property("store"),isDirty:function(){var isDeleted=this.get("isDeleted"),isSaving=this.get("isSaving");if(isDeleted&&!isSaving)return!1;var deleting=isDeleted&&isSaving;return this.get("_areAttributesDirty")||this.get("_areRelationshipsDirty")||deleting}.property("_areAttributesDirty","_areRelationshipsDirty","isDeleted","isSaving"),isNew:function(){return Eg.String.startsWith(this.get("_id"),this.constructor.temporaryIdPrefix)}.property("_id"),init:function(){this.set("_id",null),this.set("store",null),this.set("_serverAttributes",{}),this.set("_clientAttributes",{}),this.set("_serverRelationships",{}),this.set("_clientRelationships",{}),this.set("_deletedRelationships",{}),this.set("isDeleted",!1),this.set("isSaving",!1),this.set("isReloading",!1)},_loadData:function(json){json=json||{},this._loadAttributes(json),this._loadRelationships(json)},save:function(){return this.get("store").saveRecord(this)},reload:function(){return this.get("store").reloadRecord(this)},destroy:function(){return this.get("store").deleteRecord(this)}}),Eg.Model.reopenClass({temporaryIdPrefix:"EG_TEMP_ID_",isTemporaryId:function(id){return Eg.String.startsWith(id,this.temporaryIdPrefix)},create:function(){},_create:Eg.Model.create,extend:function(){var args=Array.prototype.slice.call(arguments,0),options=args.pop()||{},relationships={};options instanceof Em.Mixin||Em.keys(options).forEach(function(key){var value=options[key];options[key]&&options[key].isRelationship&&(relationships[key]=value,delete options[key])}),args.push(options);var subclass=this._super.apply(this,args);return subclass._declareRelationships(relationships),subclass}})}(),function(){new Em.Set(["id","type","content"]);Eg.attr=function(options){var meta={isAttribute:!0,type:options.type,isRequired:!options.hasOwnProperty("defaultValue"),defaultValue:options.defaultValue,readOnly:options.readOnly===!0,isEqual:options.isEqual,isValid:options.isValid},attribute=Em.computed(function(key,value){var server=this.get("_serverAttributes."+key),client=this.get("_clientAttributes."+key),current=void 0===client?server:client;if(void 0!==value){var isValid=meta.isValid||this.get("store").attributeTypeFor(meta.type).isValid;if(!isValid(value))return current;var isEqual=meta.isEqual||this.get("store").attributeTypeFor(meta.type).isEqual;return isEqual(server,value)?(delete this.get("_clientAttributes")[key],this.notifyPropertyChange("_clientAttributes"),server):(this.set("_clientAttributes."+key,value),this.notifyPropertyChange("_clientAttributes"),value)}return current}).property("_clientAttributes","_serverAttributes").meta(meta);return options.readOnly?attribute.readOnly():attribute},Eg.Model.reopenClass({attributes:Em.computed(function(){var attributes=new Em.Set;return this.eachComputedProperty(function(name,meta){meta.isAttribute&&attributes.addObject(name)}),attributes}).property(),metaForAttribute:Em.aliasMethod("metaForProperty"),isAttribute:function(name){return Em.get(this,"attributes").contains(name)},eachAttribute:function(callback,binding){this.eachComputedProperty(function(name,meta){meta.isAttribute&&callback.call(binding,name,meta)})}}),Eg.Model.reopen({_serverAttributes:null,_clientAttributes:null,_areAttributesDirty:Em.computed(function(){return Em.keys(this.get("_clientAttributes")||{}).length>0}).property("_clientAttributes"),changedAttributes:function(){var diff={};return this.constructor.eachAttribute(function(name){var server=this.get("_serverAttributes."+name),client=this.get("_clientAttributes."+name);void 0!==client&&(diff[name]=[server,client])},this),diff},rollbackAttributes:function(){this.set("_clientAttributes",{})},_loadAttributes:function(json){this.constructor.eachAttribute(function(name,meta){var value=json.hasOwnProperty(name)?json[name]:meta.defaultValue,isValid=meta.isValid||this.get("store").attributeTypeFor(meta.type).isValid;isValid(value)?this.set("_serverAttributes."+name,value):this.set("_serverAttributes."+name,meta.defaultValue)},this),this.notifyPropertyChange("_serverAttributes")}})}(),function(){{var BELONGS_TO_KEY=Eg.Model.BELONGS_TO_KEY="belongsTo",HAS_MANY_KEY=Eg.Model.HAS_MANY_KEY="hasMany",NEW_STATE=Eg.Relationship.NEW_STATE,SAVED_STATE=Eg.Relationship.SAVED_STATE,DELETED_STATE=Eg.Relationship.DELETED_STATE;new Em.Set(["id","type","content"])}Eg.hasMany=function(options){return{isRelationship:!0,kind:HAS_MANY_KEY,options:options}
},Eg.belongsTo=function(options){return{isRelationship:!0,kind:BELONGS_TO_KEY,options:options}};var createRelationship=function(kind,options){var relationship,meta={isRelationship:!1,kind:kind,isRequired:options.isRequired!==!1,defaultValue:options.defaultValue||(kind===HAS_MANY_KEY?[]:null),relatedType:options.relatedType,inverse:options.inverse,readOnly:options.readOnly===!0};return relationship=kind===HAS_MANY_KEY?function(key){return this._hasManyValue(key.substring(1))}:function(key){return this._belongsToValue(key.substring(1))},relationship.property("_serverRelationships","_clientRelationships").meta(meta).readOnly()};Eg.Model.reopenClass({_declareRelationships:function(relationships){var obj={};Em.keys(relationships).forEach(function(name){var relationship,kind=relationships[name].kind,options=relationships[name].options,relatedType=options.relatedType;relationship=kind===HAS_MANY_KEY?function(){return this.get("store").find(relatedType,this.get("_"+name).toArray())}:function(){return this.get("store").find(relatedType,this.get("_"+name))},obj["_"+name]=createRelationship(kind,options);var meta=Em.copy(obj["_"+name].meta(),!0);meta.isRelationship=!0,obj[name]=relationship.property("_"+name).meta(meta).readOnly()}),this.reopen(obj)},relationships:function(){var relationships=new Em.Set;return this.eachComputedProperty(function(name,meta){meta.isRelationship&&relationships.addObject(name)}),relationships}.property(),metaForRelationship:Em.aliasMethod("metaForProperty"),relationshipKind:function(name){return this.metaForRelationship(name).kind},eachRelationship:function(callback,binding){this.eachComputedProperty(function(name,meta){meta.isRelationship&&callback.call(binding,name,meta)})}}),Eg.Model.reopen({_serverRelationships:null,_deletedRelationships:null,_clientRelationships:null,_belongsToValue:function(relationship,server){for(var serverRelationships=Eg.util.values(this.get("_serverRelationships")),otherRelationships=Eg.util.values(this.get((server?"_deleted":"_client")+"Relationships")),current=serverRelationships.concat(otherRelationships),i=0;i<current.length;i+=1)if(current[i].relationshipName(this)===relationship)return current[i].otherId(this);return null},_hasManyValue:function(relationship,server){for(var serverRelationships=Eg.util.values(this.get("_serverRelationships")),otherRelationships=Eg.util.values(this.get((server?"_deleted":"_client")+"Relationships")),current=serverRelationships.concat(otherRelationships),found=[],i=0;i<current.length;i+=1)current[i].relationshipName(this)===relationship&&found.push(current[i].otherId(this));return new Em.Set(found)},_areRelationshipsDirty:function(){var client=Em.keys(this.get("_clientRelationships")).length>0,deleted=Em.keys(this.get("_deletedRelationships")).length>0;return client||deleted}.property("_clientRelationships","_deletedRelationships"),_getAllRelationships:function(){var server=Eg.util.values(this.get("_serverRelationships")),client=Eg.util.values(this.get("_clientRelationships")),deleted=Eg.util.values(this.get("_deletedRelationships"));return server.concat(client.concat(deleted))},_loadRelationships:function(json){var store=this.get("store"),sideWithClient=store.get("sideWithClientOnConflict");this.constructor.eachRelationship(function(name,meta){if(meta.isRequired&&!json.hasOwnProperty(name))throw new Error("You left out the required '"+name+"' relationship.");var value=json[name]||meta.defaultValue,client=this._relationshipsForName(name).filter(function(relationship){var state=relationship.get("state");if(state===DELETED_STATE){var otherId=relationship.otherId(this);return meta.kind===HAS_MANY_KEY?new Em.Set(value).contains(otherId)&&(sideWithClient||store._changeRelationshipState(relationship.get("id"),SAVED_STATE)):value===otherId&&(sideWithClient||store._changeRelationshipState(relationship.get("id"),SAVED_STATE)),!1}return state===SAVED_STATE?(store._deleteRelationship(relationship.get("id")),!1):!0},this);if(meta.kind===HAS_MANY_KEY){var given=new Em.Set(value);client.forEach(function(relationship){given.contains(relationship.otherId(this))&&store._changeRelationshipState(relationship.get("id"),SAVED_STATE)},this);var current=this._hasManyValue(name),serverNotInClient=(current.without(given),given.without(current));serverNotInClient.forEach(function(id){var addState=SAVED_STATE,conflict=this._belongsToConflict(name,id);if(null!==conflict)switch(conflict.get("state")){case DELETED_STATE:case SAVED_STATE:store._deleteRelationship(conflict.get("id"));break;case NEW_STATE:sideWithClient?addState=DELETED_STATE:store._deleteRelationship(conflict.get("id"))}store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,id,addState)},this)}else{var conflict=this._belongsToConflict(name,value);if(1===client.length)if(client[0].otherId(this)===value)store._changeRelationshipState(client[0].get("id"),SAVED_STATE);else if(sideWithClient){if(null!==value){if(null!==conflict)switch(conflict.get("state")){case DELETED_STATE:case SAVED_STATE:store._deleteRelationship(conflict.get("id"));break;case NEW_STATE:}store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,value,DELETED_STATE)}}else store._deleteRelationship(client[0].get("id")),null!==value&&(null!==conflict&&store._deleteRelationship(conflict.get("id")),store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,value,SAVED_STATE));else 0===client.length&&null!==value&&(null!==conflict&&store._deleteRelationship(conflict.get("id")),store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,value,SAVED_STATE))}},this)},_belongsToConflict:function(relationship,id){if(null===id)return null;var meta=this.constructor.metaForRelationship(relationship);if(null===meta.inverse)return null;var model=this.get("store").modelForType(meta.relatedType),otherMeta=model.metaForRelationship(meta.inverse);if(otherMeta.kind!==BELONGS_TO_KEY)return null;var record=this.get("store").getRecord(meta.relatedType,id);if(record){var current=record._belongsToValue(meta.inverse);return null===current||current===this.get("id")?null:record._findLinkTo(meta.inverse,current)}var relationships=Eg.Relationship.relationshipsForRecord(meta.relatedType,meta.inverse,id);return 0===relationships.length?null:(relationships=relationships.filter(function(relationship){var state=relationship.get("state");return state===SAVED_STATE||state===NEW_STATE}),relationships.length>0?relationships[0]:null)},changedRelationships:function(){var changed={};return this.constructor.eachRelationship(function(name,meta){var oldVal,newVal;meta.kind===HAS_MANY_KEY?(oldVal=this._hasManyValue(name,!0),newVal=this._hasManyValue(name,!1),oldVal.isEqual(newVal)||(changed[name]=[oldVal,newVal])):(oldVal=this._belongsToValue(name,!0),newVal=this._belongsToValue(name,!1),oldVal!==newVal&&(changed[name]=[oldVal,newVal]))},this),changed},rollbackRelationships:function(){var store=this.get("store");this._getAllRelationships().forEach(function(relationship){switch(relationship.get("state")){case NEW_STATE:store._deleteRelationship(relationship.get("id"));break;case SAVED_STATE:break;case DELETED_STATE:store._changeRelationshipState(relationship.get("id"),SAVED_STATE)}},this)},addToRelationship:function(relationship,id){var store=this.get("store"),meta=this.constructor.metaForRelationship(relationship);if(!meta.readOnly){var link=this._findLinkTo(relationship,id);if(!link||link.get("state")!==NEW_STATE&&link.get("state")!==SAVED_STATE){if(link&&link.get("state")===DELETED_STATE)return void this.get("store")._changeRelationshipState(link.get("id"),SAVED_STATE);var conflict=this._belongsToConflict(relationship,id);if(null!==conflict)switch(conflict.get("state")){case DELETED_STATE:break;case SAVED_STATE:store._changeRelationshipState(conflict.get("id"),DELETED_STATE);break;case NEW_STATE:store._deleteRelationship(conflict.get("id"))}store._createRelationship(this.typeKey,relationship,this.get("id"),meta.relatedType,meta.inverse,id,NEW_STATE)}}},removeFromRelationship:function(relationship,id){var meta=this.constructor.metaForRelationship(relationship);if(!meta.readOnly){var r=this._findLinkTo(relationship,id);if(null!==r)switch(r.get("state")){case NEW_STATE:this.get("store")._deleteRelationship(r.get("id"));break;case SAVED_STATE:this.get("store")._changeRelationshipState(r.get("id"),DELETED_STATE);break;case DELETED_STATE:}}},setBelongsTo:function(relationship,id){var meta=this.constructor.metaForRelationship(relationship);if(!meta.readOnly){var link=this._findLinkTo(relationship,id);if(!link||link.get("state")!==NEW_STATE&&link.get("state")!==SAVED_STATE){if(link&&link.get("state")===DELETED_STATE)return void this.get("store")._changeRelationshipState(link.get("id"),SAVED_STATE);if(this.clearBelongsTo(relationship),null!==id){if(null===id)return void this.clearBelongsTo(relationship);var store=this.get("store"),conflict=this._belongsToConflict(relationship,id);if(null!==conflict)switch(conflict.get("state")){case DELETED_STATE:break;case SAVED_STATE:store._changeRelationshipState(conflict.get("id"),DELETED_STATE);break;case NEW_STATE:store._deleteRelationship(conflict.get("id"))}store._createRelationship(this.typeKey,relationship,this.get("id"),meta.relatedType,meta.inverse,id,NEW_STATE)}}}},clearBelongsTo:function(relationship){var meta=this.constructor.metaForRelationship(relationship);if(!meta.readOnly){var current=this._belongsToValue(relationship);if(null!==current){var r=this._findLinkTo(relationship,current);if(null!==r)switch(r.get("state")){case NEW_STATE:this.get("store")._deleteRelationship(r.get("id"));break;case SAVED_STATE:this.get("store")._changeRelationshipState(r.get("id"),DELETED_STATE);break;case DELETED_STATE:}}}},_findLinkTo:function(relationship,id){for(var relationships=this._getAllRelationships(),i=0;i<relationships.length;i+=1)if(relationships[i].relationshipName(this)===relationship&&relationships[i].otherId(this)===id)return relationships[i];return null},_isLinkedTo:function(relationship,id){return null!==this._findLinkTo(relationship,id)},_relationshipsForName:function(relationship){var current=this._getAllRelationships();return current.filter(function(r){return r.relationshipName(this)===relationship},this)},_connectRelationship:function(relationship){var hash=Eg.Relationship.stateToHash(relationship.get("state"));this.set(hash+"."+relationship.get("id"),relationship),this.notifyPropertyChange(hash)},_disconnectRelationship:function(relationship){var hash=Eg.Relationship.stateToHash(relationship.get("state"));delete this.get(hash)[relationship.get("id")],this.notifyPropertyChange(hash)}})}();