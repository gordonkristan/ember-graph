!function(){window.EmberGraph=window.EG=Em.Namespace.create({VERSION:"0.1.0"}),Ember.libraries&&Ember.libraries.register("Ember Graph",EG.VERSION)}(),function(){Em&&Em.onLoad("Ember.Application",function(Application){Application.initializer({name:"injectStore",before:"store",initialize:function(container,App){App.inject("controller","store","store:main"),App.inject("route","store","store:main"),App.inject("adapter","store","store:main"),App.inject("serializer","store","store:main")}}),Application.initializer({name:"store",initialize:function(container,App){App.register("store:main",App.Store||EG.Store,{singleton:!0}),App.register("adapter:rest",EG.RESTAdapter,{singleton:!0}),App.register("adapter:fixture",EG.FixtureAdapter,{singleton:!0}),App.register("adapter:localStorage",EG.LocalStorageAdapter,{singleton:!0}),App.register("serializer:json",EG.JSONSerializer,{singleton:!0}),App.register("type:string",EG.StringType,{singleton:!0}),App.register("type:number",EG.NumberType,{singleton:!0}),App.register("type:boolean",EG.BooleanType,{singleton:!0}),App.register("type:date",EG.DateType,{singleton:!0}),App.register("type:object",EG.ObjectType,{singleton:!0}),App.register("type:array",EG.ArrayType,{singleton:!0});var store=container.lookup("store:main");App.set("store",store)}})})}(),function(){EG.util={generateGUID:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0,v="x"==c?r:3&r|8;return v.toString(16)})},values:function(obj){return Em.keys(obj).map(function(key){return obj[key]})}}}(),function(){Em.Set.reopen({withoutAll:function(items){var ret=this.copy();return ret.removeObjects(items),ret}})}(),function(){EG.String={startsWith:function(string,prefix){return 0===string.indexOf(prefix)},endsWith:function(string,suffix){return string.indexOf(suffix,string.length-suffix.length)>=0},capitalize:function(string){return string[0].toLocaleUpperCase()+string.substring(1)},decapitalize:function(string){return string[0].toLocaleLowerCase()+string.substring(1)}},(Em.EXTEND_PROTOTYPES===!0||Em.EXTEND_PROTOTYPES.String)&&(String.prototype.startsWith=String.prototype.startsWith||function(prefix){return EG.String.startsWith(this,prefix)},String.prototype.endsWith=String.prototype.endsWith||function(suffix){return EG.String.endsWith(this,suffix)},String.prototype.capitalize=String.prototype.capitalize||function(){return EG.String.capitalize(this)},String.prototype.decapitalize=String.prototype.decapitalize||function(){return EG.String.decapitalize(this)})}(),function(){var uncountableWords=["equipment","information","rice","money","species","series","fish","sheep","moose","deer","news"],pluralRules=[[/(m)an$/gi,"$1en"],[/(pe)rson$/gi,"$1ople"],[/(child)$/gi,"$1ren"],[/^(ox)$/gi,"$1en"],[/(ax|test)is$/gi,"$1es"],[/(octop|vir)us$/gi,"$1i"],[/(alias|status)$/gi,"$1es"],[/(bu)s$/gi,"$1ses"],[/(buffal|tomat|potat)o$/gi,"$1oes"],[/([ti])um$/gi,"$1a"],[/sis$/gi,"ses"],[/(?:([^f])fe|([lr])f)$/gi,"$1$2ves"],[/(hive)$/gi,"$1s"],[/([^aeiouy]|qu)y$/gi,"$1ies"],[/(x|ch|ss|sh)$/gi,"$1es"],[/(matr|vert|ind)ix|ex$/gi,"$1ices"],[/([m|l])ouse$/gi,"$1ice"],[/(quiz)$/gi,"$1zes"],[/s$/gi,"s"],[/$/gi,"s"]],singularRules=[[/(m)en$/gi,"$1an"],[/(pe)ople$/gi,"$1rson"],[/(child)ren$/gi,"$1"],[/([ti])a$/gi,"$1um"],[/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/gi,"$1$2sis"],[/(hive)s$/gi,"$1"],[/(tive)s$/gi,"$1"],[/(curve)s$/gi,"$1"],[/([lr])ves$/gi,"$1f"],[/([^fo])ves$/gi,"$1fe"],[/([^aeiouy]|qu)ies$/gi,"$1y"],[/(s)eries$/gi,"$1eries"],[/(m)ovies$/gi,"$1ovie"],[/(x|ch|ss|sh)es$/gi,"$1"],[/([m|l])ice$/gi,"$1ouse"],[/(bus)es$/gi,"$1"],[/(o)es$/gi,"$1"],[/(shoe)s$/gi,"$1"],[/(cris|ax|test)es$/gi,"$1is"],[/(octop|vir)i$/gi,"$1us"],[/(alias|status)es$/gi,"$1"],[/^(ox)en/gi,"$1"],[/(vert|ind)ices$/gi,"$1ex"],[/(matr)ices$/gi,"$1ix"],[/(quiz)zes$/gi,"$1"],[/s$/gi,""]],apply=function(str,rules){if(uncountableWords.indexOf(str)>=0)return str;for(var i=0;i<rules.length;i+=1)if(str.match(rules[i][0]))return str.replace(rules[i][0],rules[i][1]);return str};EG.String.pluralize=function(str){return apply(str,pluralRules)},EG.String.singularize=function(str){return apply(str,singularRules)},(Em.EXTEND_PROTOTYPES===!0||Em.EXTEND_PROTOTYPES.String)&&(String.prototype.pluralize=String.prototype.pluralize||function(){return EG.String.pluralize(this)},String.prototype.singularize=String.prototype.singularize||function(){return EG.String.singularize(this)})}(),function(){EG.debug=function(fn){fn()}}(),function(){var methodMissing=function(method){return new Error("Your serializer failed to implement the '"+method+"' method.")};EG.Serializer=Em.Object.extend({store:null,serialize:function(){throw methodMissing("serialize")},deserialize:function(){throw methodMissing("deserialize")}})}(),function(){EG.JSONSerializer=EG.Serializer.extend({serialize:function(record,options){options=options||{};var json={};return options.includeId&&(json.id=record.get("id")),record.constructor.eachAttribute(function(name,meta){var type=this.get("store").attributeTypeFor(meta.type);json[name]=type.serialize(record.get(name))},this),Em.get(record.constructor,"relationships").length>0&&(json.links={}),record.constructor.eachRelationship(function(name,meta){var val=record.get("_"+name);json.links[name]=meta.kind===EG.Model.HAS_MANY_KEY?val.filter(function(id){return!EG.Model.isTemporaryId(id)}):null===val||EG.Model.isTemporaryId(val)?null:val}),json},deserialize:function(payload,options){if(!payload||0===Em.keys(payload).length)return{};var payloadKeys=new Em.Set(Em.keys(payload)),json=this._extract(payload);return json.meta=json.meta||{},options&&options.isQuery&&(json.meta.queryIds=payload[payloadKeys.withoutAll(["meta","linked"]).toArray()[0]].map(function(r){return""+r.id})),options&&options.isCreatedRecord&&(json.meta.newId=payload[payloadKeys.withoutAll(["meta","linked"]).toArray()[0]][0].id+""),Em.keys(json).forEach(function(typeKey){"meta"!==typeKey&&(json[typeKey]=json[typeKey].map(function(record){return this._deserializeSingle(typeKey,record)},this).filter(function(item){return!!item}))},this),json},_extract:function(payload){var json=payload.hasOwnProperty("linked")?this._extract(payload.linked):{};return Em.keys(payload).forEach(function(key){if("linked"!==key&&"meta"!==key){var typeKey=EG.String.singularize(key);json[typeKey]=payload[key].concat(json[typeKey]||[])}},this),json},_deserializeSingle:function(typeKey,json){try{if(json=json||{},json.links=json.links||{},"string"!=typeof json.id&&"number"!=typeof json.id)return null;var model=this.get("store").modelForType(typeKey),record={id:json.id+""};return this._validateAttributes(model,json),Em.keys(json).forEach(function(attribute){if("id"!==attribute&&"links"!==attribute){var meta=model.metaForAttribute(attribute),type=this.get("store").attributeTypeFor(meta.type);record[attribute]=type.deserialize(json[attribute])}},this),this._validateRelationships(model,json),Em.keys(json.links).forEach(function(relationship){var meta=model.metaForRelationship(relationship);meta.kind===EG.Model.HAS_MANY_KEY?record[relationship]=json.links[relationship].map(function(id){return""+id}):(record[relationship]=json.links[relationship],null!==record[relationship]&&(record[relationship]=""+record[relationship]))}),record}catch(e){return null}},_validateAttributes:function(model,json){var attributes=Em.get(model,"attributes"),givenAttributes=new Em.Set(Em.keys(json));givenAttributes.removeObjects(["id","links"]);givenAttributes.withoutAll(attributes);model.eachAttribute(function(name,meta){if(!json.hasOwnProperty(name)&&meta.isRequired)throw new Error("Your JSON is missing the required `"+name+"` attribute.")})},_validateRelationships:function(model,json){{var relationships=Em.get(model,"relationships"),givenRelationships=new Em.Set(Em.keys(json.links));givenRelationships.withoutAll(relationships)}model.eachRelationship(function(name,meta){if(!json.links.hasOwnProperty(name)&&meta.isRequired)throw new Error("Your JSON is missing the required `"+name+"` relationship.");if(json.links.hasOwnProperty(name)){var jsonType=Em.typeOf(json.links[name]);if(meta.kind===EG.Model.HAS_MANY_KEY){if("array"!==jsonType)throw new Error("The `"+name+"` has many relationship in your JSON was not an array.")}else if("string"!==jsonType&&"number"!==jsonType&&"null"!==jsonType)throw new Error("The `"+name+"` has one relationship in your JSON was not a valid value (string, number or null).")}})}})}(),function(){var missingMethod=function(method){return new Error("Your adapter failed to implement the '"+method+"' method.")};EG.Adapter=Em.Object.extend({container:null,store:null,defaultSerializer:"json",serializer:Em.computed(function(){var container=this.get("container"),serializer=container.lookup("serializer:application")||container.lookup("serializer:"+this.get("defaultSerializer"));return serializer}).property().readOnly(),createRecord:function(){throw missingMethod("createRecord")},findRecord:function(){throw missingMethod("findRecord")},findMany:function(){throw missingMethod("findMany")},findAll:function(){throw missingMethod("findAll")},findQuery:function(){throw missingMethod("findQuery")},updateRecord:function(){throw missingMethod("updateRecord")},deleteRecord:function(){throw missingMethod("deleteRecord")},serialize:function(record,options){return this.get("serializer").serialize(record,options)},deserialize:function(payload,options){return this.get("serializer").deserialize(payload,options)}})}(),function(){var removeEmpty=function(item){return!Em.isEmpty(item)};EG.SynchronousAdapter=EG.Adapter.extend({_getRecord:Em.required(),_getRecords:Em.required(),_setRecord:Em.required(),_deleteRecord:Em.required(),createRecord:function(record){return record.set("id",EG.util.generateGUID()),this._setRecord(record),Em.RSVP.Promise.resolve({})},findRecord:function(typeKey,id){var json={};return json[EG.String.pluralize(typeKey)]=[this._getRecord(typeKey,id)].filter(removeEmpty),Em.RSVP.Promise.resolve(this.deserialize(json))},findMany:function(typeKey,ids){var json={};return json[EG.String.pluralize(typeKey)]=ids.map(function(id){return this._getRecord(typeKey,id)},this).filter(removeEmpty),Em.RSVP.Promise.resolve(this.deserialize(json))},findAll:function(typeKey){var json={};return json[EG.String.pluralize(typeKey)]=this._getRecords(typeKey),Em.RSVP.Promise.resolve(this.deserialize(json))},findQuery:function(){throw new Error("Your adapter doesn't implement `findQuery`.")},updateRecord:function(record){return this._setRecord(record),Em.RSVP.Promise.resolve({})},deleteRecord:function(record){return this._deleteRecord(record.typeKey,record.get("id")),Em.RSVP.Promise.resolve({})}})}(),function(){EG.FixtureAdapter=EG.SynchronousAdapter.extend({_getRecord:function(typeKey,id){var model=this.get("store").modelForType(typeKey);model.FIXTURES=model.FIXTURES||[];for(var i=0;i<model.FIXTURES.length;i+=1)if(model.FIXTURES[i].id===id)return this._fixtureToJson(typeKey,model.FIXTURES[i]);return null},_getRecords:function(typeKey){return(this.get("store").modelForType(typeKey).FIXTURES||[]).map(function(fixture){return this._fixtureToJson(typeKey,fixture)},this)},_setRecord:function(record){var fixture=this._recordToFixture(record),model=record.constructor;model.FIXTURES=model.FIXTURES||[];for(var i=0;i<model.FIXTURES.length;i+=1)if(model.FIXTURES[i].id===fixture.id)return void(model.FIXTURES[i]=fixture);model.FIXTURES.push(fixture)},_deleteRecord:function(typeKey,id){var model=this.get("store").modelForType(typeKey);model.FIXTURES=model.FIXTURES||[];for(var i=0;i<model.FIXTURES.length;i+=1)if(model.FIXTURES[i].id===id)return void model.FIXTURES.splice(i,1)},_fixtureToJson:function(typeKey,fixture){var model=this.get("store").modelForType(typeKey),json={id:fixture.id,links:{}};return model.eachAttribute(function(name,meta){var type=this.get("store").attributeTypeFor(meta.type);json[name]=void 0===fixture[name]?meta.defaultValue:type.serialize(fixture[name])},this),model.eachRelationship(function(name,meta){var val=fixture[name];json.links[name]=meta.kind===EG.Model.HAS_MANY_KEY?void 0===val?meta.defaultValue:val.filter(function(id){return!EG.Model.isTemporaryId(id)}):void 0===val?meta.defaultValue:val}),json},_recordToFixture:function(record){var fixture={id:record.get("id")};return record.constructor.eachAttribute(function(name){fixture[name]=record.get(name)}),record.constructor.eachRelationship(function(name){fixture[name]=record.get("_"+name),fixture[name]&&fixture[name].toArray&&(fixture[name]=fixture[name].toArray())}),fixture}})}(),function(){EG.LocalStorageAdapter=EG.SynchronousAdapter.extend({fixtures:[],init:function(){if(!JSON.parse(localStorage["ember-graph.models.initialized"]||"false")){var store=this.get("store"),adapter=EG.FixtureAdapter.create({store:store});this.get("fixtures").forEach(function(typeKey){(store.modelForType(typeKey).FIXTURES||[]).forEach(function(fixture){var id=fixture.id,json=JSON.stringify(adapter._getRecord(typeKey,id));localStorage["ember-graph.models."+typeKey+"."+id]=json},this)},this)}return localStorage["ember-graph.models.initialized"]="true",this._super()},_getRecord:function(typeKey,id){var recordString=localStorage["ember-graph.models."+typeKey+"."+id];return"string"==typeof recordString?JSON.parse(recordString):null},_getRecords:function(typeKey){return Em.keys(localStorage).filter(function(key){return EG.String.startsWith(key,"ember-graph.models."+typeKey)}).map(function(key){var parts=/ember-graph\.models\.(.+)\.(.+)/g.exec(key);return this._getRecord(parts[1],parts[2])},this)},_setRecord:function(record){var json=this.serialize(record,{includeId:!0});localStorage["ember-graph.models."+record.typeKey+"."+json.id]=JSON.stringify(json)},_deleteRecord:function(typeKey,id){delete localStorage["ember-graph.models."+typeKey+"."+id]}})}(),function(){EG.RESTAdapter=EG.Adapter.extend({createRecord:function(record){var url=this._buildUrl(record.typeKey,null),json=this.serialize(record,{includeId:!1});return this._ajax(url,"POST",{},json).then(function(payload){return this.deserialize(payload,{isCreatedRecord:!0})}.bind(this))},findRecord:function(typeKey,id){var url=this._buildUrl(typeKey,id);return this._ajax(url,"GET").then(function(payload){return this.deserialize(payload)}.bind(this))},findMany:function(typeKey,ids){var url=this._buildUrl(typeKey,ids.join());return this._ajax(url,"GET").then(function(payload){return this.deserialize(payload)}.bind(this))},findAll:function(typeKey){var url=this._buildUrl(typeKey,null);return this._ajax(url,"GET").then(function(payload){return this.deserialize(payload)}.bind(this))},findQuery:function(typeKey,query){var options={};Em.keys(query).forEach(function(key){options[key]=""+query[key]});var url=this._buildUrl(typeKey,null,options);return this._ajax(url,"GET").then(function(payload){return this.deserialize(payload,{isQuery:!0})}.bind(this))},updateRecord:function(record){var url=this._buildUrl(record.typeKey,record.get("id")),json=this.serialize(record,{includeId:!0});return this._ajax(url,"PUT",{},json).then(function(payload){return this.deserialize(payload)}.bind(this))},deleteRecord:function(record){var url=this._buildUrl(record.typeKey,record.get("id"));return this._ajax(url,"DELETE").then(function(payload){return this.deserialize(payload)||{}}.bind(this))},_buildUrl:function(typeKey,id,options){var url=this.get("prefix")+"/";return url+=id?typeKey+"/"+id:EG.String.pluralize(typeKey),options&&Em.keys(options).forEach(function(key,index){url+=(0===index?"?":"&")+key+"="+encodeURIComponent(options[key])}),url},prefix:Em.computed(function(){return""}).property(),_ajax:function(url,verb,headers,body){return new Em.RSVP.Promise(function(resolve,reject){$.ajax({cache:!1,contentType:"application/json",data:void 0===body?void 0:"string"==typeof body?body:JSON.stringify(body),headers:headers||{},processData:!1,type:verb,url:url,error:function(jqXHR,textStatus,error){Em.run(null,reject,error)},success:function(data){Em.run(null,resolve,data)}})})}})}(),function(){EG.Store=Em.Object.extend({defaultAdapter:"rest",cacheTimeout:1/0,_records:{},adapter:Em.computed(function(){var container=this.get("container"),adapter=container.lookup("adapter:application")||container.lookup("adapter:"+this.get("defaultAdapter"));return adapter}).property(),init:function(){this.set("_records",{}),this.set("_types",{}),this.set("_relationships",{}),this.set("_queuedRelationships",{})},_getRecord:function(typeKey,id){var records=this.get("_records");return records[typeKey]=records[typeKey]||{},records[typeKey][id]},_setRecord:function(typeKey,record){var records=this.get("_records");records[typeKey]=records[typeKey]||{},records[typeKey][record.get("id")]={record:record,timestamp:(new Date).getTime()}},_deleteRecord:function(typeKey,id){var records=this.get("_records");records[typeKey]=records[typeKey]||{},delete records[typeKey][id]},modelForType:function(typeKey){this._modelCache=this._modelCache||{};var factory=this.get("container").lookupFactory("model:"+typeKey);return this._modelCache[typeKey]||(this._modelCache[typeKey]=factory,factory.reopen({typeKey:typeKey}),factory.reopenClass({typeKey:typeKey})),factory},createRecord:function(typeKey,json){json=json||{};var record=this.modelForType(typeKey)._create();return record.set("store",this),record.set("id",EG.Model.temporaryIdPrefix+EG.util.generateGUID()),this._setRecord(typeKey,record),record._loadData(json),record},_loadRecord:function(typeKey,json){var record=this.modelForType(typeKey)._create();return record.set("store",this),record.set("id",json.id),this._setRecord(typeKey,record),this._hasQueuedRelationships(typeKey,json.id)&&this._connectQueuedRelationships(record),record._loadData(json),record},cachedRecordsFor:function(typeKey){var records=this.get("_records."+typeKey)||{},timeout=(new Date).getTime()-this.get("cacheTimeout");return Em.keys(records).map(function(id){var recordShell=records[id];return recordShell.timestamp>=timeout?recordShell.record:void 0})},find:function(typeKey,options){if(arguments.length>1&&!options)throw new Ember.Error("A bad `find` call was made to the store.");switch(Em.typeOf(options)){case"string":case"number":return this._findSingle(typeKey,options+"");case"array":return this._findMany(typeKey,options);case"object":return this._findQuery(typeKey,options);case"undefined":return this._findAll(typeKey);default:throw new Ember.Error("A bad `find` call was made to the store.")}},getRecord:function(typeKey,id){var record=this._getRecord(typeKey,id),timeout=(new Date).getTime()-this.get("cacheTimeout");return record&&record.record?record.timestamp>=timeout?record.record:null:null},_findSingle:function(type,id){var promise,record=this.getRecord(type,id);return promise=record?Em.RSVP.Promise.resolve(record):this.get("adapter").findRecord(type,id).then(function(payload){return this.extractPayload(payload),this.getRecord(type,id)}.bind(this)),EG.PromiseObject.create({promise:promise})},_findMany:function(type,ids){ids=ids||[];var set=new Em.Set(ids);ids.forEach(function(id){null!==this.getRecord(type,id)&&set.removeObject(id)},this);var promise;return promise=0===set.length?Em.RSVP.Promise.resolve(ids.map(function(id){return this.getRecord(type,id)},this)):this.get("adapter").findMany(type,set.toArray()).then(function(payload){return this.extractPayload(payload),ids.map(function(id){return this.getRecord(type,id)},this).toArray()}.bind(this)),EG.PromiseArray.create({promise:promise})},_findAll:function(type){var promise=this.get("adapter").findAll(type).then(function(payload){return this.extractPayload(payload),this.cachedRecordsFor(type)}.bind(this));return EG.PromiseArray.create({promise:promise})},_findQuery:function(typeKey,options){var promise=this.get("adapter").findQuery(typeKey,options).then(function(payload){var ids=payload.meta.ids;return this.extractPayload(payload),ids.map(function(id){return this.getRecord(typeKey,id)},this)}.bind(this));return EG.PromiseArray.create({promise:promise})},hasRecord:function(typeKey,id){return null!==this.getRecord(typeKey,id)},saveRecord:function(record){var type=record.typeKey,isNew=record.get("isNew"),tempId=record.get("id");return record.set("isSaving",!0),isNew?this.get("adapter").createRecord(record).then(function(payload){return record.set("id",payload.meta.newId),record.set("isSaving",!1),this._deleteRecord(type,tempId),this._setRecord(type,record),this.extractPayload(payload),record}.bind(this)):this.get("adapter").updateRecord(record).then(function(payload){return this.extractPayload(payload),record.set("isSaving",!1),record}.bind(this))},deleteRecord:function(record){{var type=record.typeKey,id=record.get("id");this.get("_records."+type)||{}}return record.set("isSaving",!0),record.set("isDeleted",!0),this.get("adapter").deleteRecord(record).then(function(payload){this._deleteRelationshipsForRecord(type,id),this.extractPayload(payload),record.set("isSaving",!1),this._deleteRecord(type,id)}.bind(this))},reloadRecord:function(record){return record.set("isReloading",!0),this.get("adapter").find(record.typeKey,record.get("id")).then(function(payload){return this.extractPayload(payload),record.set("isReloading",!1),record}.bind(this))},extractPayload:function(payload){var reloadDirty=this.get("reloadDirty");try{this.beginPropertyChanges(),Em.keys(payload).forEach(function(typeKey){if("meta"!==typeKey){{this.modelForType(typeKey)}payload[typeKey].forEach(function(json){var record=this.getRecord(typeKey,json.id);record?(!record.get("isDirty")||reloadDirty)&&record._loadData(json):this._loadRecord(typeKey,json)},this)}},this)}finally{this.endPropertyChanges()}},attributeTypeFor:function(typeName){var attributeType=this.get("container").lookup("type:"+typeName);return attributeType}})}(),function(){EG.Store.reopen({reloadDirty:!0,sideWithClientOnConflict:!0,overwriteClientAttributes:!1,_relationships:{},_queuedRelationships:null,_hasQueuedRelationships:function(typeKey,id){for(var queued=EG.util.values(this.get("_queuedRelationships")),i=0;i<queued.length;i+=1)if(queued[i].get("type2")===typeKey&&queued[i].get("object2")===id)return!0;return!1},_connectQueuedRelationships:function(record){var alerts=[],queued=this.get("_queuedRelationships"),toConnect=this._queuedRelationshipsFor(record.typeKey,record.get("id"));return toConnect.forEach(function(relationship){alerts.push(record._connectRelationship(relationship)),relationship.set("object2",record),delete queued[relationship.get("id")]}),this.notifyPropertyChange("_queuedRelationships"),alerts},_queuedRelationshipsFor:function(typeKey,id){var current,relationships=[],queued=this.get("_queuedRelationships");for(var relationshipId in queued)queued.hasOwnProperty(relationshipId)&&(current=queued[relationshipId],current.get("type2")===typeKey&&current.get("object2")===id&&relationships.push(current));return relationships},_createRelationship:function(type1,relationship1,id1,type2,relationship2,id2,state){var alerts=[],record1=this.getRecord(type1,id1),record2=this.getRecord(type2,id2);if(null===record1&&null===record2)return alerts;if(null===record1){var temp=record1;record1=record2,record2=temp,temp=id1,id1=id2,id2=id1,temp=relationship1,relationship1=relationship2,relationship2=temp}if(null===relationship1)return alerts;if(record1._isLinkedTo(relationship1,id2))return alerts;var relationship=EG.Relationship.create({object1:record1,relationship1:relationship1,object2:null===record2?id2:record2,relationship2:relationship2,state:state});return this.get("_relationships")[relationship.get("id")]=relationship,alerts.push(record1._connectRelationship(relationship)),null!==record2?alerts.push(record2._connectRelationship(relationship)):(this.set("_queuedRelationships."+relationship.get("id"),relationship),this.notifyPropertyChange("_queuedRelationships")),alerts},_deleteRelationship:function(id){var alerts=[],relationship=this.get("_relationships")[id];if(Em.isNone(relationship))return alerts;var object1=relationship.get("object1"),object2=relationship.get("object2");return alerts.push(object1._disconnectRelationship(relationship)),object2 instanceof EG.Model?alerts.push(object2._disconnectRelationship(relationship)):(delete this.get("_queuedRelationships")[id],this.notifyPropertyChange("_queuedRelationships")),delete this.get("_relationships")[id],alerts},_changeRelationshipState:function(id,state){var alerts=[],relationship=this.get("_relationships")[id];if(Em.isNone(relationship)||relationship.get("state")===state)return alerts;var object1=relationship.get("object1"),object2=relationship.get("object2"),oldHash=EG.Relationship.stateToHash(relationship.get("state")),newHash=EG.Relationship.stateToHash(state);return relationship.set("state",state),object1.set(newHash+"."+id,object1.get(oldHash+"."+id)),delete object1.get(oldHash)[id],alerts.push({record:object1,property:oldHash}),alerts.push({record:object1,property:newHash}),object2 instanceof EG.Model&&(object2.set(newHash+"."+id,object2.get(oldHash+"."+id)),delete object2.get(oldHash)[id],alerts.push({record:object2,property:oldHash}),alerts.push({record:object2,property:newHash})),alerts},_relationshipsForRecord:function(typeKey,name,id){return EG.util.values(this.get("_relationships")).filter(function(relationship){if(relationship.get("type1")===typeKey&&relationship.get("id")===id&&relationship.get("relationship1")===name)return!0;if(relationship.get("type2")===typeKey&&relationship.get("relationship2")===name){var object2=relationship.get("object2");if("string"==typeof object2){if(object2===id)return!0}else if(object2.get("id")===id)return!0}return!1})},_deleteRelationshipsForRecord:function(typeKey,id){var alerts=[],relationships=EG.util.values(this.get("_relationships"));relationships.forEach(function(relationship){relationship.isConnectedTo(typeKey,id)&&(alerts=alerts.concat(this._deleteRelationship(Em.get(relationship,"id"))))},this),alerts.forEach(function(alert){Em.tryInvoke(alert.record,"notifyPropertyChange",[alert.property])})}})}(),function(){EG.PromiseObject=Em.ObjectProxy.extend(Em.PromiseProxyMixin),EG.PromiseArray=Em.ArrayProxy.extend(Em.PromiseProxyMixin)}(),function(){var NEW_STATE="new",SAVED_STATE="saved",DELETED_STATE="deleted";EG.Relationship=Em.Object.extend({id:null,state:function(){var state=NEW_STATE;return function(key,value){if(arguments.length>1){if(value!==NEW_STATE&&value!==SAVED_STATE&&value!==DELETED_STATE)throw new Error("'"+value+"' is an invalid relationship state.");state=value}return state}}(),object1:null,relationship1:null,type1:null,object2:null,relationship2:null,type2:null,oneWay:Em.computed(function(){return null===this.get("relationship2")}).property("relationship2"),init:function(){this.set("id",Em.generateGuid(null,"relationship"))},isNew:function(){return this.get("state")===NEW_STATE},isSaved:function(){return this.get("state")===SAVED_STATE},isDeleted:function(){return this.get("state")===DELETED_STATE},otherId:function(record){if(this.get("object1")===record){var object2=this.get("object2");return"string"==typeof object2?object2:object2.get("id")}return this.get("object1.id")},otherRecord:function(record){var object1=this.get("object1");if(object1===record){var object2=this.get("object2");if("string"==typeof object2){var inverse=object1.constructor.metaForRelationship(this.get("relationship1")).relatedType;return object1.get("store").getRecord(inverse,object2)}return object2}return object1},relationshipName:function(record){return this.get("object1")===record?this.get("relationship1"):this.get("object2")===record?this.get("relationship2"):void 0},isConnectedTo:function(typeKey,id){if(this.get("type1")===typeKey&&this.get("object1.id")===id)return!0;if(this.get("type2")===typeKey){var object2=this.get("object2");return"string"===Em.typeOf(object2)?object2===id:Em.get(object2,"id")===id}return!1}}),EG.Relationship.reopenClass({NEW_STATE:NEW_STATE,SAVED_STATE:SAVED_STATE,DELETED_STATE:DELETED_STATE,create:function(properties){var relationship=this._super();return relationship.setProperties(properties),relationship.set("type1",properties.object1.typeKey),properties.object2 instanceof EG.Model?relationship.set("type2",properties.object2.typeKey):relationship.set("type2",properties.object1.constructor.metaForRelationship(properties.relationship1).relatedType),relationship},stateToHash:function(state){switch(state){case NEW_STATE:return"_clientRelationships";case SAVED_STATE:return"_serverRelationships";case DELETED_STATE:return"_deletedRelationships";default:return""}}})}(),function(){EG.AttributeType=Em.Object.extend({defaultValue:null,serialize:function(obj){return obj},deserialize:function(json){return json},isValid:function(){return!0},isEqual:function(a,b){return a===b}})}(),function(){EG.ArrayType=EG.AttributeType.extend({serialize:function(obj){return Em.isNone(obj)?null:(obj=obj.toArray?obj.toArray():obj,Em.isArray(obj)?obj:null)},deserialize:function(json){return Em.isArray(json)?json:null},isValid:function(obj){try{return JSON.stringify(obj),Em.isArray(obj)}catch(e){return!1}},isEqual:function(a,b){return Em.isArray(a)&&Em.isArray(b)?0===Em.compare(a.toArray(),b.toArray()):!1}})}(),function(){EG.BooleanType=EG.AttributeType.extend({defaultValue:!1,serialize:function(obj){return this._coerceToBoolean(obj)},deserialize:function(json){return this._coerceToBoolean(json)},_coerceToBoolean:function(obj){return"boolean"===Em.typeOf(obj)&&1==obj?!0:"string"===Em.typeOf(obj)&&"true"==obj?!0:!1},isValid:function(obj){return"boolean"===Em.typeOf(obj)}})}(),function(){EG.DateType=EG.AttributeType.extend({serialize:function(obj){switch(Em.typeOf(obj)){case"date":return obj.getTime();case"number":return obj;case"string":return new Date(obj).getTime();default:return null}},deserialize:function(json){switch(Em.typeOf(json)){case"number":case"string":return new Date(json);default:return null}},isValid:function(obj){return null===obj||"date"===Em.typeOf(obj)},isEqual:function(a,b){var aNone=null===a,bNone=null===b;return aNone&&bNone?!0:aNone&&!bNone||!aNone&&bNone?!1:new Date(a).getTime()===new Date(b).getTime()}})}(),function(){EG.NumberType=EG.AttributeType.extend({defaultValue:0,serialize:function(obj){return this._coerceToNumber(obj)},deserialize:function(json){return this._coerceToNumber(json)},_coerceToNumber:function(obj){if(this.isValid(obj))return Number(obj);if("string"===Em.typeOf(obj)){var parsed=Number(obj);if(this.isValid(parsed))return parsed}return 0},isValid:function(obj){return"number"===Em.typeOf(obj)&&!isNaN(obj)&&isFinite(obj)}})}(),function(){var isObject=function(obj){return!Em.isNone(obj)&&"object"==typeof obj&&obj.constructor===Object},deepCompare=function(a,b){if(isObject(a)&&isObject(b)){if(!new Em.Set(Em.keys(a)).isEqual(new Em.Set(Em.keys(b))))return!1;for(var keys=Em.keys(a),i=0;i<keys.length;i+=1)if(!deepCompare(a[keys[i]],b[keys[i]]))return!1;return!0}return Em.isArray(a)&&Em.isArray(b)?0===Em.compare(a,b):a===b};EG.ObjectType=EG.AttributeType.extend({serialize:function(obj){if(!isObject(obj))return null;try{return JSON.stringify(obj),obj}catch(e){return null}},deserialize:function(json){return isObject(json)?json:null},isValid:function(obj){try{return JSON.stringify(obj),isObject(obj)}catch(e){return!1}},isEqual:function(a,b){return isObject(a)&&isObject(b)?deepCompare(a,b):!1}})}(),function(){EG.StringType=EG.AttributeType.extend({serialize:function(obj){return null===obj?null:""+obj},deserialize:function(json){return null===json?null:""+json},isValid:function(obj){return null===obj||"string"===Em.typeOf(obj)}})}(),function(){EG.Model=Em.Object.extend(Em.Evented,{typeKey:null,_id:null,id:Em.computed(function(key,value){var id=this.get("_id");if(arguments.length>1){var prefix=this.constructor.temporaryIdPrefix;if(null===id)return this.set("_id",value),value;if(EG.String.startsWith(id,prefix)&&!EG.String.startsWith(value,prefix))return this.set("_id",value),value;throw new Error("Cannot change the 'id' property of a model.")}return id}).property("_id"),store:null,isDeleted:null,isSaving:null,isReloading:null,isLoaded:Em.computed(function(){return null!==this.get("store")
}).property("store"),isDirty:Em.computed(function(){var isDeleted=this.get("isDeleted"),isSaving=this.get("isSaving");if(isDeleted&&!isSaving)return!1;var deleting=isDeleted&&isSaving;return this.get("_areAttributesDirty")||this.get("_areRelationshipsDirty")||deleting}).property("_areAttributesDirty","_areRelationshipsDirty","isDeleted","isSaving"),isNew:Em.computed(function(){return EG.String.startsWith(this.get("_id"),this.constructor.temporaryIdPrefix)}).property("_id"),_initializeProperties:function(){this.set("_id",null),this.set("store",null),this.set("isDeleted",!1),this.set("isSaving",!1),this.set("isReloading",!1)}.on("init"),_loadData:function(json){json=json||{},this._loadAttributes(json),this._loadRelationships(json)},save:function(){return this.get("store").saveRecord(this)},reload:function(){return this.get("store").reloadRecord(this)},destroy:function(){return this.get("store").deleteRecord(this)},isEqual:function(other){return other?this.typeKey===Em.get(other,"typeKey")&&this.get("id")===Em.get(other,"id"):void 0},rollback:function(){this.rollbackAttributes(),this.rollbackRelationships()}}),EG.Model.reopenClass({temporaryIdPrefix:"EG_TEMP_ID_",isTemporaryId:function(id){return EG.String.startsWith(id,this.temporaryIdPrefix)},create:function(){},_create:EG.Model.create,extend:function(){var args=Array.prototype.slice.call(arguments,0),options=args.pop()||{},attributes={},relationships={};options instanceof Em.Mixin||Em.keys(options).forEach(function(key){var value=options[key];options[key]&&(options[key].isRelationship?(relationships[key]=value,delete options[key]):options[key].isAttribute&&(attributes[key]=value,delete options[key]))}),args.push(options);var subclass=this._super.apply(this,args);return subclass._declareAttributes(attributes),subclass._declareRelationships(relationships),subclass},isEqual:function(a,b){return Em.isNone(a)||Em.isNone(b)?!1:this.detectInstance(a)?a.isEqual(b):this.detectInstance(b)?b.isEqual(a):this.detectInstance(Em.get(a,"content"))?Em.get(a,"content").isEqual(b):this.detectInstance(Em.get(b,"content"))?Em.get(b,"content").isEqual(a):!1}})}(),function(){var createAttribute=(new Em.Set(["id","type","content"]),function(attributeName,options){var meta={isAttribute:!0,type:options.type,isRequired:!options.hasOwnProperty("defaultValue"),defaultValue:options.defaultValue,readOnly:options.readOnly===!0,isEqual:options.isEqual,isValid:options.isValid},attribute=Em.computed(function(key,value){var server=this.get("_serverAttributes."+key),client=this.get("_clientAttributes."+key),current=void 0===client?server:client;if(EG.debug(function(){arguments.length>1&&void 0===value}),void 0!==value){var isValid=meta.isValid||this.get("store").attributeTypeFor(meta.type).isValid;if(!isValid(value))return current;var isEqual=meta.isEqual||this.get("store").attributeTypeFor(meta.type).isEqual;return isEqual(server,value)?this.set("_clientAttributes."+key,void 0):this.set("_clientAttributes."+key,value),this.notifyPropertyChange("_clientAttributes"),value}return current}).property("_clientAttributes."+attributeName,"_serverAttributes."+attributeName).meta(meta);return options.readOnly?attribute.readOnly():attribute});EG.Model.reopenClass({_declareAttributes:function(attributes){var obj={};Em.keys(attributes).forEach(function(attributeName){obj[attributeName]=createAttribute(attributeName,attributes[attributeName].options)}),this.reopen(obj)},attributes:Em.computed(function(){var attributes=new Em.Set;return this.eachComputedProperty(function(name,meta){meta.isAttribute&&attributes.addObject(name)}),attributes}).property(),metaForAttribute:Em.aliasMethod("metaForProperty"),isAttribute:function(propertyName){return Em.get(this,"attributes").contains(propertyName)},eachAttribute:function(callback,binding){this.eachComputedProperty(function(name,meta){meta.isAttribute&&callback.call(binding,name,meta)})}}),EG.Model.reopen({_serverAttributes:null,_clientAttributes:null,_initializeAttributes:function(){this.set("_serverAttributes",Em.Object.create()),this.set("_clientAttributes",Em.Object.create())}.on("init"),_areAttributesDirty:Em.computed(function(){return Em.keys(this.get("_clientAttributes")||{}).length>0}).property("_clientAttributes"),changedAttributes:function(){var diff={};return this.constructor.eachAttribute(function(name){var server=this.get("_serverAttributes."+name),client=this.get("_clientAttributes."+name);void 0!==client&&(diff[name]=[server,client])},this),diff},rollbackAttributes:function(){this.set("_clientAttributes",Em.Object.create())},_loadAttributes:function(json){this.constructor.eachAttribute(function(attributeName,meta){var value=json.hasOwnProperty(attributeName)?json[attributeName]:meta.defaultValue,isValid=meta.isValid||this.get("store").attributeTypeFor(meta.type).isValid;isValid(value)?this.set("_serverAttributes."+attributeName,value):this.set("_serverAttributes."+attributeName,meta.defaultValue)},this)}})}(),function(){var HAS_ONE_KEY=EG.Model.HAS_ONE_KEY="hasOne",HAS_MANY_KEY=EG.Model.HAS_MANY_KEY="hasMany",NEW_STATE=EG.Relationship.NEW_STATE,SAVED_STATE=EG.Relationship.SAVED_STATE,DELETED_STATE=EG.Relationship.DELETED_STATE,createRelationship=(new Em.Set(["id","type","content"]),function(kind,options){var relationship,meta={isRelationship:!1,kind:kind,isRequired:options.hasOwnProperty("defaultValue")?!1:options.isRequired!==!1,defaultValue:options.defaultValue||(kind===HAS_MANY_KEY?[]:null),relatedType:options.relatedType,inverse:options.inverse,readOnly:options.readOnly===!0};return relationship=kind===HAS_MANY_KEY?function(key){return this._hasManyValue(key.substring(1))}:function(key){return this._hasOneValue(key.substring(1))},Em.computed(relationship).property("_serverRelationships","_clientRelationships").meta(meta).readOnly()});EG.Model.reopenClass({_declareRelationships:function(relationships){var obj={};Em.keys(relationships).forEach(function(name){var relationship,kind=relationships[name].kind,options=relationships[name].options,relatedType=options.relatedType;relationship=kind===HAS_MANY_KEY?function(){return this.get("store").find(relatedType,this.get("_"+name).toArray())}:function(){var id=this.get("_"+name);return null===id?null:this.get("store").find(relatedType,id)},obj["_"+name]=createRelationship(kind,options);var meta=Em.copy(obj["_"+name].meta(),!0);meta.isRelationship=!0,obj[name]=relationship.property("_"+name).meta(meta).readOnly()}),this.reopen(obj)},relationships:Em.computed(function(){var relationships=new Em.Set;return this.eachComputedProperty(function(name,meta){meta.isRelationship&&relationships.addObject(name)}),relationships}).property(),isRelationship:function(propertyName){return Em.get(this,"relationships").contains(propertyName)},metaForRelationship:Em.aliasMethod("metaForProperty"),relationshipKind:function(name){return this.metaForRelationship(name).kind},eachRelationship:function(callback,binding){this.eachComputedProperty(function(name,meta){meta.isRelationship&&callback.call(binding,name,meta)})},_notifyProperties:function(properties){properties.forEach(function(property){try{var obj=property.record,name=property.property;obj.notifyPropertyChange(obj.constructor.isRelationship&&obj.constructor.isRelationship(name)?"_"+name:name)}catch(e){}},this)}}),EG.Model.reopen({_serverRelationships:null,_deletedRelationships:null,_clientRelationships:null,_initializeRelationships:function(){this.set("_serverRelationships",Em.Object.create()),this.set("_clientRelationships",Em.Object.create()),this.set("_deletedRelationships",Em.Object.create())}.on("init"),_hasOneValue:function(relationship,server){for(var serverRelationships=EG.util.values(this.get("_serverRelationships")),otherRelationships=EG.util.values(this.get((server?"_deleted":"_client")+"Relationships")),current=serverRelationships.concat(otherRelationships),i=0;i<current.length;i+=1)if(current[i].relationshipName(this)===relationship)return current[i].otherId(this);return null},_hasManyValue:function(relationship,server){for(var serverRelationships=EG.util.values(this.get("_serverRelationships")),otherRelationships=EG.util.values(this.get((server?"_deleted":"_client")+"Relationships")),current=serverRelationships.concat(otherRelationships),found=[],i=0;i<current.length;i+=1)current[i].relationshipName(this)===relationship&&found.push(current[i].otherId(this));return new Em.Set(found)},_areRelationshipsDirty:Em.computed(function(){var client=Em.keys(this.get("_clientRelationships")).length>0,deleted=Em.keys(this.get("_deletedRelationships")).length>0;return client||deleted}).property("_clientRelationships","_deletedRelationships"),_getAllRelationships:function(){var server=EG.util.values(this.get("_serverRelationships")),client=EG.util.values(this.get("_clientRelationships")),deleted=EG.util.values(this.get("_deletedRelationships"));return server.concat(client.concat(deleted))},_loadRelationships:function(json){var alerts=[],store=this.get("store"),sideWithClient=store.get("sideWithClientOnConflict");this.constructor.eachRelationship(function(name,meta){if(meta.isRequired&&!json.hasOwnProperty(name))throw new Error("You left out the required '"+name+"' relationship.");var value=json[name]||meta.defaultValue;if(meta.kind===HAS_MANY_KEY)value=value.map(function(id){if("string"===Em.typeOf(id))return id;if(EG.Model.detectInstance(id))return id.get("id");throw new Error("When creating records, relationships must be either records or IDs.")});else if(EG.Model.detectInstance(value))value=value.get("id");else if("string"!==Em.typeOf(value)&&null!==value)throw new Error("When creating records, relationships must be either records or IDs.");var client=this._relationshipsForName(name).filter(function(relationship){var state=relationship.get("state");if(state===DELETED_STATE){var otherId=relationship.otherId(this);return meta.kind===HAS_MANY_KEY?new Em.Set(value).contains(otherId)&&(sideWithClient||(alerts=alerts.concat(store._changeRelationshipState(relationship.get("id"),SAVED_STATE)))):value===otherId&&(sideWithClient||(alerts=alerts.concat(store._changeRelationshipState(relationship.get("id"),SAVED_STATE)))),!1}return state===SAVED_STATE?(alerts=alerts.concat(store._deleteRelationship(relationship.get("id"))),!1):!0},this);if(meta.kind===HAS_MANY_KEY){var given=new Em.Set(value);client.forEach(function(relationship){given.contains(relationship.otherId(this))&&(alerts=alerts.concat(store._changeRelationshipState(relationship.get("id"),SAVED_STATE)))},this);var current=this._hasManyValue(name),serverNotInClient=(current.without(given),given.without(current));serverNotInClient.forEach(function(id){var addState=SAVED_STATE,conflict=this._hasOneConflict(name,id);if(null!==conflict)switch(conflict.get("state")){case DELETED_STATE:case SAVED_STATE:alerts=alerts.concat(store._deleteRelationship(conflict.get("id")));break;case NEW_STATE:sideWithClient?addState=DELETED_STATE:alerts=alerts.concat(store._deleteRelationship(conflict.get("id")))}alerts=alerts.concat(store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,id,addState))},this)}else{var conflict=this._hasOneConflict(name,value);if(1===client.length)if(client[0].otherId(this)===value)alerts=alerts.concat(store._changeRelationshipState(client[0].get("id"),SAVED_STATE));else if(sideWithClient){if(null!==value){if(null!==conflict)switch(conflict.get("state")){case DELETED_STATE:case SAVED_STATE:alerts=alerts.concat(store._deleteRelationship(conflict.get("id")));break;case NEW_STATE:}alerts=alerts.concat(store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,value,DELETED_STATE))}}else alerts=alerts.concat(store._deleteRelationship(client[0].get("id"))),null!==value&&(null!==conflict&&(alerts=alerts.concat(store._deleteRelationship(conflict.get("id")))),alerts=alerts.concat(store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,value,SAVED_STATE)));else 0===client.length&&null!==value&&(null!==conflict&&(alerts=alerts.concat(store._deleteRelationship(conflict.get("id")))),alerts=alerts.concat(store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,value,SAVED_STATE)))}},this),this.constructor._notifyProperties(alerts)},_hasOneConflict:function(relationship,id){if(null===id)return null;var meta=this.constructor.metaForRelationship(relationship);if(null===meta.inverse)return null;var model=this.get("store").modelForType(meta.relatedType),otherMeta=model.metaForRelationship(meta.inverse);if(otherMeta.kind!==HAS_ONE_KEY)return null;var record=this.get("store").getRecord(meta.relatedType,id);if(record){var current=record._hasOneValue(meta.inverse);return null===current||current===this.get("id")?null:record._findLinkTo(meta.inverse,current)}var relationships=this.get("store")._relationshipsForRecord(meta.relatedType,meta.inverse,id);return 0===relationships.length?null:(relationships=relationships.filter(function(relationship){var state=relationship.get("state");return state===SAVED_STATE||state===NEW_STATE}),relationships.length>0?relationships[0]:null)},changedRelationships:function(){var changed={};return this.constructor.eachRelationship(function(name,meta){var oldVal,newVal;meta.kind===HAS_MANY_KEY?(oldVal=this._hasManyValue(name,!0),newVal=this._hasManyValue(name,!1),oldVal.isEqual(newVal)||(changed[name]=[oldVal,newVal])):(oldVal=this._hasOneValue(name,!0),newVal=this._hasOneValue(name,!1),oldVal!==newVal&&(changed[name]=[oldVal,newVal]))},this),changed},rollbackRelationships:function(){var alerts=[],store=this.get("store");this._getAllRelationships().forEach(function(relationship){switch(relationship.get("state")){case NEW_STATE:alerts=alerts.concat(store._deleteRelationship(relationship.get("id")));break;case SAVED_STATE:break;case DELETED_STATE:alerts=alerts.concat(store._changeRelationshipState(relationship.get("id"),SAVED_STATE))}},this),this.constructor._notifyProperties(alerts)},addToRelationship:function(relationshipName,id){EG.Model.detectInstance(id)&&(id=id.get("id"));var alerts=[],store=this.get("store"),meta=this.constructor.metaForRelationship(relationshipName);if(!meta.readOnly){var link=this._findLinkTo(relationshipName,id);if(!link||link.get("state")!==NEW_STATE&&link.get("state")!==SAVED_STATE){if(link&&link.get("state")===DELETED_STATE)return alerts=alerts.concat(this.get("store")._changeRelationshipState(link.get("id"),SAVED_STATE)),void this.constructor._notifyProperties(alerts);var conflict=this._hasOneConflict(relationshipName,id);if(null!==conflict)switch(conflict.get("state")){case DELETED_STATE:break;case SAVED_STATE:alerts=alerts.concat(store._changeRelationshipState(conflict.get("id"),DELETED_STATE));break;case NEW_STATE:alerts=alerts.concat(store._deleteRelationship(conflict.get("id")))}alerts=alerts.concat(store._createRelationship(this.typeKey,relationshipName,this.get("id"),meta.relatedType,meta.inverse,id,NEW_STATE)),this.constructor._notifyProperties(alerts)}}},removeFromRelationship:function(relationshipName,id){EG.Model.detectInstance(id)&&(id=id.get("id"));var meta=this.constructor.metaForRelationship(relationshipName);if(!meta.readOnly){var r=this._findLinkTo(relationshipName,id);if(null!==r)switch(r.get("state")){case NEW_STATE:this.constructor._notifyProperties(this.get("store")._deleteRelationship(r.get("id")));break;case SAVED_STATE:this.constructor._notifyProperties(this.get("store")._changeRelationshipState(r.get("id"),DELETED_STATE));break;case DELETED_STATE:}}},setHasOneRelationship:function(relationshipName,id){EG.Model.detectInstance(id)&&(id=id.get("id"));var alerts=[],meta=this.constructor.metaForRelationship(relationshipName);if(!meta.readOnly){var link=this._findLinkTo(relationshipName,id);if(!link||link.get("state")!==NEW_STATE&&link.get("state")!==SAVED_STATE){if(link&&link.get("state")===DELETED_STATE)return alerts=alerts.concat(this.get("store")._changeRelationshipState(link.get("id"),SAVED_STATE)),void this.constructor._notifyProperties(alerts);if(null!==id){if(null===id)return void this.clearHasOneRelationship(relationshipName);alerts=alerts.concat(this.clearHasOneRelationship(relationshipName,!0));var store=this.get("store"),conflict=this._hasOneConflict(relationshipName,id);if(null!==conflict)switch(conflict.get("state")){case DELETED_STATE:break;case SAVED_STATE:alerts=alerts.concat(store._changeRelationshipState(conflict.get("id"),DELETED_STATE));break;case NEW_STATE:alerts=alerts.concat(store._deleteRelationship(conflict.get("id")))}alerts=alerts.concat(store._createRelationship(this.typeKey,relationshipName,this.get("id"),meta.relatedType,meta.inverse,id,NEW_STATE)),this.constructor._notifyProperties(alerts)}}}},clearHasOneRelationship:function(relationshipName,suppressNotifications){var alerts=[],meta=this.constructor.metaForRelationship(relationshipName);if(meta.readOnly)return[];var current=this._hasOneValue(relationshipName);if(null!==current){var r=this._findLinkTo(relationshipName,current);if(null!==r)switch(r.get("state")){case NEW_STATE:alerts=alerts.concat(this.get("store")._deleteRelationship(r.get("id")));break;case SAVED_STATE:alerts=alerts.concat(this.get("store")._changeRelationshipState(r.get("id"),DELETED_STATE));break;case DELETED_STATE:}}return suppressNotifications?alerts:(this.constructor._notifyProperties(alerts),[])},_findLinkTo:function(relationship,id){for(var relationships=this._getAllRelationships(),i=0;i<relationships.length;i+=1)if(relationships[i].relationshipName(this)===relationship&&relationships[i].otherId(this)===id)return relationships[i];return null},_isLinkedTo:function(relationship,id){return null!==this._findLinkTo(relationship,id)},_relationshipsForName:function(relationship){var current=this._getAllRelationships();return current.filter(function(r){return r.relationshipName(this)===relationship},this)},_connectRelationship:function(relationship){var hash=EG.Relationship.stateToHash(relationship.get("state"));return this.set(hash+"."+relationship.get("id"),relationship),{record:this,property:hash}},_disconnectRelationship:function(relationship){var hash=EG.Relationship.stateToHash(relationship.get("state"));return delete this.get(hash)[relationship.get("id")],{record:this,property:hash}}})}(),function(){EG.attr=function(options){return{isAttribute:!0,options:options}},EG.hasMany=function(options){return{isRelationship:!0,kind:EG.Model.HAS_MANY_KEY,options:options}},EG.hasOne=function(options){return{isRelationship:!0,kind:EG.Model.HAS_ONE_KEY,options:options}}}();