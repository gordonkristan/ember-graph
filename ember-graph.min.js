!function(){if(window.EmberGraph={},window.Eg=window.EmberGraph,Ember.libraries){var VERSION="0.1.0";Ember.libraries.register("Ember Graph",VERSION)}}(),function(){Eg.util={generateGUID:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0,v="x"==c?r:3&r|8;return v.toString(16)})},values:function(obj){return Em.keys(obj).map(function(key){return obj[key]})}}}(),function(){Eg.String={startsWith:function(string,prefix){return 0===string.indexOf(prefix)},endsWith:function(string,suffix){return string.indexOf(suffix,this.length-suffix.length)>=0},capitalize:function(string){return string[0].toLocaleUpperCase()+string.substring(1)},decapitalize:function(string){return string[0].toLocaleLowerCase()+string.substring(1)}},(Em.EXTEND_PROTOTYPES===!0||Em.EXTEND_PROTOTYPES.String)&&(String.prototype.startsWith=String.prototype.startsWith||function(prefix){return Eg.String.startsWith(this,prefix)},String.prototype.endsWith=String.prototype.endsWith||function(suffix){return Eg.String.endsWith(this,suffix)},String.prototype.capitalize=String.prototype.capitalize||function(){return Eg.String.capitalize(this)},String.prototype.decapitalize=String.prototype.decapitalize||function(){return Eg.String.decapitalize(this)})}(),function(){var uncountableWords=["equipment","information","rice","money","species","series","fish","sheep","moose","deer","news"],pluralRules=[[/(m)an$/gi,"$1en"],[/(pe)rson$/gi,"$1ople"],[/(child)$/gi,"$1ren"],[/^(ox)$/gi,"$1en"],[/(ax|test)is$/gi,"$1es"],[/(octop|vir)us$/gi,"$1i"],[/(alias|status)$/gi,"$1es"],[/(bu)s$/gi,"$1ses"],[/(buffal|tomat|potat)o$/gi,"$1oes"],[/([ti])um$/gi,"$1a"],[/sis$/gi,"ses"],[/(?:([^f])fe|([lr])f)$/gi,"$1$2ves"],[/(hive)$/gi,"$1s"],[/([^aeiouy]|qu)y$/gi,"$1ies"],[/(x|ch|ss|sh)$/gi,"$1es"],[/(matr|vert|ind)ix|ex$/gi,"$1ices"],[/([m|l])ouse$/gi,"$1ice"],[/(quiz)$/gi,"$1zes"],[/s$/gi,"s"],[/$/gi,"s"]],singularRules=[[/(m)en$/gi,"$1an"],[/(pe)ople$/gi,"$1rson"],[/(child)ren$/gi,"$1"],[/([ti])a$/gi,"$1um"],[/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/gi,"$1$2sis"],[/(hive)s$/gi,"$1"],[/(tive)s$/gi,"$1"],[/(curve)s$/gi,"$1"],[/([lr])ves$/gi,"$1f"],[/([^fo])ves$/gi,"$1fe"],[/([^aeiouy]|qu)ies$/gi,"$1y"],[/(s)eries$/gi,"$1eries"],[/(m)ovies$/gi,"$1ovie"],[/(x|ch|ss|sh)es$/gi,"$1"],[/([m|l])ice$/gi,"$1ouse"],[/(bus)es$/gi,"$1"],[/(o)es$/gi,"$1"],[/(shoe)s$/gi,"$1"],[/(cris|ax|test)es$/gi,"$1is"],[/(octop|vir)i$/gi,"$1us"],[/(alias|status)es$/gi,"$1"],[/^(ox)en/gi,"$1"],[/(vert|ind)ices$/gi,"$1ex"],[/(matr)ices$/gi,"$1ix"],[/(quiz)zes$/gi,"$1"],[/s$/gi,""]],apply=function(str,rules){if(uncountableWords.indexOf(str)>=0)return str;for(var i=0;i<rules.length;i+=1)if(str.match(rules[i][0]))return str.replace(rules[i][0],rules[i][1]);return str};Eg.String.pluralize=function(str){return apply(str,pluralRules)},Eg.String.singularize=function(str){return apply(str,singularRules)},(Em.EXTEND_PROTOTYPES===!0||Em.EXTEND_PROTOTYPES.String)&&(String.prototype.pluralize=String.prototype.pluralize||function(){return Eg.String.pluralize(this)},String.prototype.singularize=String.prototype.singularize||function(){return Eg.String.singularize(this)})}(),function(){Eg.PromiseObject=Em.ObjectProxy.extend(Em.PromiseProxyMixin),Eg.PromiseArray=Em.ArrayProxy.extend(Em.PromiseProxyMixin)}(),function(){var NEW_STATE="new",SAVED_STATE="saved",DELETED_STATE="deleted",nextRelationshipId=0,allRelationships={};Eg.Relationship=Em.Object.extend({id:null,state:null,object1:null,relationship1:null,type1:null,object2:null,relationship2:null,type2:null,oneWay:function(){return null===this.get("relationship2")}.property("relationship2"),init:function(){this.set("id",nextRelationshipId+""),nextRelationshipId+=1},isNew:function(){return this.get("state")===NEW_STATE},isSaved:function(){return this.get("state")===SAVED_STATE},isDeleted:function(){return this.get("state")===DELETED_STATE},otherId:function(record){if(this.get("object1")===record){var object2=this.get("object2");return"string"==typeof object2?object2:object2.get("id")}return this.get("object1.id")},otherRecord:function(record){var object1=this.get("object1");if(object1===record){var object2=this.get("object2");if("string"==typeof object2){var inverse=object1.constructor.metaForRelationship(this.get("relationship1")).relatedType;return object1.get("store").getRecord(inverse,object2)}return object2}return object1},relationshipName:function(record){return this.get("object1")===record?this.get("relationship1"):this.get("object2")===record?this.get("relationship2"):void 0}}),Eg.Relationship.reopenClass({NEW_STATE:NEW_STATE,SAVED_STATE:SAVED_STATE,DELETED_STATE:DELETED_STATE,create:function(properties){var relationship=this._super();return relationship.setProperties(properties),relationship.set("type1",properties.object1.typeKey),properties.object2 instanceof Eg.Model?relationship.set("type2",properties.object2.typeKey):relationship.set("type2",properties.object1.constructor.metaForRelationship(properties.relationship1).relatedType),allRelationships[relationship.get("id")]=relationship,relationship},getRelationship:function(id){return allRelationships[id]},deleteRelationship:function(id){delete allRelationships[id]},stateToHash:function(state){switch(state){case NEW_STATE:return"_clientRelationships";case SAVED_STATE:return"_serverRelationships";case DELETED_STATE:return"_deletedRelationships";default:return""}}})}(),function(){Eg.AttributeType=Em.Object.extend({defaultValue:null,serialize:function(obj){return obj},deserialize:function(json){return json},isValid:function(){return!0},isEqual:function(a,b){return a===b}}),Eg.AttributeType.reopenClass({_types:{},registerAttributeType:function(name,type){var instance=type instanceof Eg.AttributeType?type:type.create();this._types[name]=instance},attributeTypeForName:function(name){return this._types[name]}})}(),function(){Eg.BooleanType=Eg.AttributeType.extend({defaultValue:!1,serialize:function(obj){return!!obj},deserialize:function(json){return!!json},isValid:function(obj){return"boolean"==typeof obj}}),Eg.AttributeType.registerAttributeType("boolean",Eg.BooleanType)}(),function(){Eg.DateType=Eg.AttributeType.extend({serialize:function(obj){return obj instanceof Date?obj.getTime():"number"==typeof obj?obj:"string"==typeof obj?new Date(obj).getTime():null},deserialize:function(){return"number"==typeof obj||"string"==typeof obj?new Date(obj):null},isValid:function(obj){return null===obj||obj instanceof Date},isEqual:function(a,b){var aNone=null===a,bNone=null===b;return aNone&&bNone?!0:aNone&&!bNone||!aNone&&bNone?!1:new Date(a).getTime()===new Date(b).getTime()}}),Eg.AttributeType.registerAttributeType("date",Eg.DateType)}(),function(){Eg.NumberType=Eg.AttributeType.extend({defaultValue:0,serialize:function(obj){return Number(obj)||0},deserialize:function(json){return Number(json)||0},isValid:function(obj){return"number"==typeof obj}}),Eg.AttributeType.registerAttributeType("number",Eg.NumberType)}(),function(){Eg.StringType=Eg.AttributeType.extend({serialize:function(obj){return null===obj?null:""+obj},deserialize:function(json){return null===json?null:""+json},isValid:function(obj){return null===obj||"string"==typeof obj}}),Eg.AttributeType.registerAttributeType("string",Eg.StringType)}(),function(){var isObject=function(obj){return!Em.isNone(obj)&&"object"==typeof obj&&obj.constructor===Object},deepCompare=function(a,b){if(isObject(a)&&isObject(b)){if(!new Em.Set(Em.keys(a)).isEqual(new Em.Set(Em.keys(b))))return!1;for(var keys=Em.keys(a),i=0;i<keys.length;i+=1)if(!deepCompare(a[keys[i]],b[keys[i]]))return!1;return!0}return Em.isArray(a)&&Em.isArray(b)?0===Em.compare(a,b):a===b};Eg.ObjectType=Eg.AttributeType.extend({serialize:function(obj){if(!isObject(obj))return null;try{return JSON.stringify(obj),obj}catch(e){return null}},deserialize:function(json){return isObject(json)?json:null},isValid:function(obj){try{return JSON.stringify(obj),isObject(obj)}catch(e){return!1}},isEqual:function(a,b){return isObject(a)&&isObject(b)?deepCompare(a,b):!1}}),Eg.AttributeType.registerAttributeType("object",Eg.ObjectType)}(),function(){Eg.ArrayType=Eg.AttributeType.extend({serialize:function(obj){return Em.isNone(obj)?null:(obj=obj.toArray?obj.toArray():obj,Em.isArray(obj)?obj:null)},deserialize:function(json){return Em.isArray(json)?json:null},isValid:function(obj){try{return JSON.stringify(obj),isObject(obj)}catch(e){return!1}},isEqual:function(a,b){return Em.isArray(a)&&Em.isArray(b)?0===Em.compare(a.toArray(),b.toArray()):!1}}),Eg.AttributeType.registerAttributeType("array",Eg.ArrayType)}(),function(){Eg.Model=Em.Object.extend({typeKey:null,_id:null,id:function(key,value){var id=this.get("_id");if(arguments.length>1){var prefix=this.constructor.temporaryIdPrefix;if(null===id)return this.set("_id",value),value;if(Eg.String.startsWith(id,prefix)&&!Eg.String.startsWith(value,prefix))return this.set("_id",value),value;throw new Error("Cannot change the 'id' property of a model.")}return id}.property("_id"),store:null,isDeleted:null,isSaving:null,isReloading:null,isLoaded:function(){return null!==this.get("store")}.property("store"),isDirty:function(){var isDeleted=this.get("isDeleted"),isSaving=this.get("isSaving");if(isDeleted&&!isSaving)return!1;var deleting=isDeleted&&isSaving;return this.get("_areAttributesDirty")||this.get("_areRelationshipsDirty")||deleting}.property("_areAttributesDirty","_areRelationshipsDirty","isDeleted","isSaving"),isNew:function(){return Eg.String.startsWith(this.get("_id"),this.constructor.temporaryIdPrefix)}.property("_id"),init:function(){this.set("_id",null),this.set("store",null),this.set("_serverAttributes",{}),this.set("_clientAttributes",{}),this.set("_serverRelationships",{}),this.set("_clientRelationships",{}),this.set("_deletedRelationships",{}),this.set("isDeleted",!1),this.set("isSaving",!1),this.set("isReloading",!1)},_loadData:function(json){json=json||{},this._loadAttributes(json),this._loadRelationships(json)},save:function(){return this.get("store").saveRecord(this)},reload:function(){return this.get("store").reloadRecord(this)},destroy:function(){return this.get("store").deleteRecord(this)}}),Eg.Model.reopenClass({temporaryIdPrefix:"EG_TEMP_ID_",isTemporaryId:function(id){return Eg.String.startsWith(id,this.temporaryIdPrefix)},create:function(){},_create:Eg.Model.create,extend:function(){},_extend:function(_super){return function(typeKey,mixins,options){var subclass=_super.apply(this,mixins.concat([options]));return subclass._declareRelationships(),subclass.reopen({typeKey:typeKey}),subclass.reopenClass({typeKey:typeKey}),subclass}}(Eg.Model.extend)})}(),function(){new Em.Set(["id","type","content"]);Eg.attr=function(options){var typeTransform=Eg.AttributeType.attributeTypeForName(options.type),meta={isAttribute:!0,type:options.type,typeTransform:typeTransform,isRequired:options.hasOwnProperty("isRequired")?options.isRequired:!options.hasOwnProperty("defaultValue"),defaultValue:options.defaultValue||typeTransform.get("defaultValue"),isEqual:options.isEqual||typeTransform.isEqual,readOnly:options.readOnly===!0,isValid:options.isValid||typeTransform.isValid},attribute=function(key,value){var server=this.get("_serverAttributes."+key),client=this.get("_clientAttributes."+key),current=void 0===client?server:client;return void 0!==value?meta.isValid(value)?meta.isEqual(server,value)?(delete this.get("_clientAttributes")[key],this.notifyPropertyChange("_clientAttributes"),server):(this.set("_clientAttributes."+key,value),this.notifyPropertyChange("_clientAttributes"),value):current:current}.property("_clientAttributes","_serverAttributes").meta(meta);return options.readOnly?attribute.readOnly():attribute},Eg.Model.reopenClass({attributes:function(){var attributes=new Em.Set;return this.eachComputedProperty(function(name,meta){meta.isAttribute&&attributes.addObject(name)}),attributes}.property(),metaForAttribute:Em.aliasMethod("metaForProperty"),isAttribute:function(name){return Em.get(this,"attributes").contains(name)},eachAttribute:function(callback,binding){this.eachComputedProperty(function(name,meta){meta.isAttribute&&callback.call(binding,name,meta)})}}),Eg.Model.reopen({_serverAttributes:null,_clientAttributes:null,_areAttributesDirty:function(){return Em.keys(this.get("_clientAttributes")||{}).length>0}.property("_clientAttributes"),changedAttributes:function(){var diff={};return this.constructor.eachAttribute(function(name){var server=this.get("_serverAttributes."+name),client=this.get("_clientAttributes."+name);void 0!==client&&(diff[name]=[server,client])},this),diff},rollbackAttributes:function(){this.set("_clientAttributes",{})},_loadAttributes:function(json){this.constructor.eachAttribute(function(name,meta){var value=json.hasOwnProperty(name)?json[name]:meta.defaultValue;meta.isValid(value)?this.set("_serverAttributes."+name,value):this.set("_serverAttributes."+name,meta.defaultValue)},this),this.notifyPropertyChange("_serverAttributes")}})}(),function(){var BELONGS_TO_KEY=Eg.Model.BELONGS_TO_KEY="belongsTo",HAS_MANY_KEY=Eg.Model.HAS_MANY_KEY="hasMany",NEW_STATE=Eg.Relationship.NEW_STATE,SAVED_STATE=Eg.Relationship.SAVED_STATE,DELETED_STATE=Eg.Relationship.DELETED_STATE,createRelationship=(new Em.Set(["id","type","content"]),function(kind,options){var relationship,meta={isRelationship:!0,kind:kind,isRequired:options.isRequired!==!1,defaultValue:options.defaultValue||(kind===HAS_MANY_KEY?[]:null),relatedType:options.relatedType,inverse:options.inverse,readOnly:options.readOnly===!0};return relationship=kind===HAS_MANY_KEY?function(key){return this._hasManyValue(key)}:function(key){return this._belongsToValue(key)},relationship.property("_serverRelationships","_clientRelationships").meta(meta).readOnly()});Eg.hasMany=function(options){return createRelationship(HAS_MANY_KEY,options)},Eg.belongsTo=function(options){return createRelationship(BELONGS_TO_KEY,options)},Eg.Model.reopenClass({_declareRelationships:function(){this.eachRelationship(function(name,meta){var relationship,obj={},relatedType=meta.relatedType;relationship=meta.kind===HAS_MANY_KEY?function(){return this.get("store").find(relatedType,this.get(name).toArray())}:function(){return this.get("store").find(relatedType,this.get(name))},obj[Eg.String.capitalize(name)]=relationship.property(name).readOnly(),this.reopen(obj)},this)},relationships:function(){var relationships=new Em.Set;return this.eachComputedProperty(function(name,meta){meta.isRelationship&&relationships.addObject(name)}),relationships}.property(),metaForRelationship:Em.aliasMethod("metaForProperty"),relationshipKind:function(name){return this.metaForProperty(name).kind},eachRelationship:function(callback,binding){this.eachComputedProperty(function(name,meta){meta.isRelationship&&callback.call(binding,name,meta)})}}),Eg.Model.reopen({_serverRelationships:null,_deletedRelationships:null,_clientRelationships:null,_belongsToValue:function(relationship,server){for(var serverRelationships=Eg.util.values(this.get("_serverRelationships")),otherRelationships=Eg.util.values(this.get((server?"_deleted":"_client")+"Relationships")),current=serverRelationships.concat(otherRelationships),i=0;i<current.length;i+=1)if(current[i].relationshipName(this)===relationship)return current[i].otherId(this);return null},_hasManyValue:function(relationship,server){for(var serverRelationships=Eg.util.values(this.get("_serverRelationships")),otherRelationships=Eg.util.values(this.get((server?"_deleted":"_client")+"Relationships")),current=serverRelationships.concat(otherRelationships),found=[],i=0;i<current.length;i+=1)current[i].relationshipName(this)===relationship&&found.push(current[i].otherId(this));return new Em.Set(found)},_areRelationshipsDirty:function(){var client=Em.keys(this.get("_clientRelationships")).length>0,deleted=Em.keys(this.get("_deletedRelationships")).length>0;return client||deleted}.property("_clientRelationships","_deletedRelationships"),_getAllRelationships:function(){var server=Eg.util.values(this.get("_serverRelationships")),client=Eg.util.values(this.get("_clientRelationships")),deleted=Eg.util.values(this.get("_deletedRelationships"));return server.concat(client.concat(deleted))},_loadRelationships:function(json){var store=this.get("store");this.constructor.eachRelationship(function(name,meta){if(meta.isRequired&&void 0===json[name])throw new Error("You left out the required '"+name+"' relationship.");if(json[name]=json[name]||meta.defaultValue,meta.kind===HAS_MANY_KEY){var currentSet=new Em.Set,givenSet=new Em.Set(json[name]);this._relationshipsForName(name).forEach(function(relationship){var id=relationship.otherId(this);currentSet.addObject(id),givenSet.contains(id)?relationship.isNew()&&store._changeRelationshipState(relationship.get("id"),"saved"):store._deleteRelationship(relationship.get("id"))},this),givenSet.forEach(function(id){currentSet.contains(id)||store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,id,!0)},this)}else{var current=this.get(name);if(current===json[name])return;null!==current&&store._deleteRelationship(Em.get(this._findLinkTo(name,current),"id")),null!==json[name]&&store._createRelationship(this.typeKey,name,this.get("id"),meta.relatedType,meta.inverse,json[name],!0)}},this)},changedRelationships:function(){var changed={};return this.constructor.eachRelationship(function(name,meta){var oldVal,newVal;meta.kind===HAS_MANY_KEY?(oldVal=this._hasManyValue(name,!0),newVal=this._hasManyValue(name,!1),oldVal.isEqual(newVal)||(changed[name]=[oldVal,newVal])):(oldVal=this._belongsToValue(name,!0),newVal=this._belongsToValue(name,!1),oldVal!==newVal&&(changed[name]=[oldVal,newVal]))},this),changed},rollbackRelationships:function(){var store=this.get("store");this._getAllRelationships().forEach(function(relationship){switch(relationship.get("state")){case NEW_STATE:store._deleteRelationship(relationship.get("id"));break;case SAVED_STATE:break;case DELETED_STATE:store._changeRelationshipState(relationship.get("id"),SAVED_STATE)}},this)},addToRelationship:function(relationship,id){var meta=this.constructor.metaForRelationship(relationship);if(!meta.readOnly){var link=this._findLinkTo(relationship,id);if(!link||link.get("state")!==NEW_STATE&&link.get("state")!==SAVED_STATE)return link&&link.get("state")===DELETED_STATE?void this.get("store")._changeRelationshipState(link.get("id"),SAVED_STATE):void this.get("store")._createRelationship(this.typeKey,relationship,this.get("id"),meta.relatedType,meta.inverse,id,!1)}},removeFromRelationship:function(relationship,id){var meta=this.constructor.metaForRelationship(relationship);if(!meta.readOnly){var r=this._findLinkTo(relationship,id);if(null!==r)switch(r.get("state")){case NEW_STATE:this.get("store")._deleteRelationship(r.get("id"));break;case SAVED_STATE:this.get("store")._changeRelationshipState(r.get("id"),DELETED_STATE);break;case DELETED_STATE:}}},setBelongsTo:function(relationship,id){var meta=this.constructor.metaForRelationship(relationship);if(!meta.readOnly){var link=this._findLinkTo(relationship,id);if(!link||link.get("state")!==NEW_STATE&&link.get("state")!==SAVED_STATE){if(link&&link.get("state")===DELETED_STATE)return void this.get("store")._changeRelationshipState(link.get("id"),SAVED_STATE);if(this.clearBelongsTo(relationship),null!==id)return null===id?void this.clearBelongsTo(relationship):void this.get("store")._createRelationship(this.typeKey,relationship,this.get("id"),meta.relatedType,meta.inverse,id,!1)}}},clearBelongsTo:function(relationship){var meta=this.constructor.metaForRelationship(relationship);if(!meta.readOnly){var current=this.get(relationship);if(null!==current){var r=this._findLinkTo(relationship,current);if(null!==r)switch(r.get("state")){case NEW_STATE:this.get("store")._deleteRelationship(r.get("id"));break;case SAVED_STATE:this.get("store")._changeRelationshipState(r.get("id"),DELETED_STATE);break;case DELETED_STATE:}}}},_findLinkTo:function(relationship,id){for(var relationships=this._getAllRelationships(),i=0;i<relationships.length;i+=1)if(relationships[i].relationshipName(this)===relationship&&relationships[i].otherId(this)===id)return relationships[i];return null},_isLinkedTo:function(relationship,id){return null!==this._findLinkTo(relationship,id)},_relationshipsForName:function(relationship){var current=this._getAllRelationships();return current.filter(function(r){return r.relationshipName(this)===relationship},this)},_connectRelationship:function(relationship){var hash=Eg.Relationship.stateToHash(relationship.get("state"));this.set(hash+"."+relationship.get("id"),relationship),this.notifyPropertyChange(hash)},_disconnectRelationship:function(relationship){var hash=Eg.Relationship.stateToHash(relationship.get("state"));delete this.get(hash)[relationship.get("id")],this.notifyPropertyChange(hash)}})}(),function(){var methodMissing=function(method){return new Error("Your serializer failed to implement the '"+method+"' method.")};Eg.Serializer=Em.Object.extend({store:null,serialize:function(){throw methodMissing("serialize")},deserialize:function(){throw methodMissing("deserialize")}})}(),function(){var missingMethod=function(method){return new Error("Your adapter failed to implement the '"+method+"' method.")};Eg.Adapter=Em.Object.extend({store:null,serializer:null,_serializerDidChange:function(){var serializer=this.get("serializer");serializer&&serializer.set("store",this.get("store"))}.observes("serializer").on("init"),createRecord:function(){throw missingMethod("createRecord")},findRecord:function(){throw missingMethod("findRecord")},findMany:function(){throw missingMethod("findMany")},findAll:function(){throw missingMethod("findAll")},findQuery:function(){throw missingMethod("findQuery")},updateRecord:function(){throw missingMethod("updateRecord")},deleteRecord:function(){throw missingMethod("deleteRecord")},serialize:function(record,options){return this.get("serializer").serialize(record,options)},deserialize:function(payload,options){return this.get("serializer").deserialize(payload,options)}})}(),function(){Eg.Store=Em.Object.extend({cacheTimeout:1/0,_records:null,_types:null,adapter:null,init:function(){this.set("_records",{}),this.set("_types",{}),this.set("_queuedRelationships",{});var adapter=this.get("adapter");null!==adapter&&(adapter instanceof Eg.Adapter||this.set("adapter",adapter.create()),this.set("adapter.store",this))},createModel:function(typeKey,parentKey,mixins,options){options=arguments[arguments.length-1];var base=Eg.Model;"string"==typeof parentKey&&(base=this.get("_types."+parentKey)),mixins=Em.isArray(mixins)?mixins:Em.isArray(parentKey)?parentKey:[];var subclass=base._extend(typeKey,mixins,options);return this.set("_types."+typeKey,subclass),this.set("_records."+typeKey,{}),subclass},modelForType:function(typeKey){return this.get("_types."+typeKey)},createRecord:function(typeKey,json){json=json||{};var record=this.modelForType(typeKey)._create();return record.set("store",this),record.set("id",Eg.Model.temporaryIdPrefix+Eg.util.generateGUID()),this.set("_records."+typeKey+"."+record.get("id"),{record:record,timestamp:(new Date).getTime()}),record._loadData(json),record},_loadRecord:function(typeKey,json){var record=this.modelForType(typeKey)._create();return record.set("store",this),record.set("id",json.id),this.set("_records."+typeKey+"."+json.id,{record:record,timestamp:(new Date).getTime()}),this._hasQueuedRelationships(typeKey,json.id)&&this._connectQueuedRelationships(record),record._loadData(json),record},_recordsForType:function(typeKey){var records=this.get("_records."+typeKey)||{},timeout=(new Date).getTime()-this.get("cacheTimeout");return Em.keys(records).map(function(id){var recordShell=records[id];return recordShell.timestamp>=timeout?recordShell.record:void 0})},find:function(typeKey,options){return"string"==typeof options?this._findSingle(typeKey,options):Em.isArray(options)?this._findMany(typeKey,options):"object"==typeof options?this._findQuery(typeKey,options):this._findAll(typeKey)},getRecord:function(typeKey,id){var store=this.get("_records"),records=store[typeKey]||(store[typeKey]={}),timeout=(new Date).getTime()-this.get("cacheTimeout");return records[id]?records[id].timestamp>=timeout?records[id].record:null:null},_findSingle:function(type,id){var promise,record=this.getRecord(type,id);return promise=record?Em.RSVP.Promise.resolve(record):this.get("adapter").findRecord(type,id).then(function(payload){return this._extractPayload(payload),this.getRecord(type,id)}.bind(this)),Eg.PromiseObject.create({promise:promise})},_findMany:function(type,ids){ids=ids||[];var set=new Em.Set(ids);ids.forEach(function(id){null!==this.getRecord(type,id)&&set.removeObject(id)},this);var promise;return promise=0===set.length?Em.RSVP.Promise.resolve(ids.map(function(id){return this.getRecord(type,id)},this)):this.get("adapter").findMany(type,set.toArray()).then(function(payload){return this._extractPayload(payload),ids.map(function(id){return this.getRecord(type,id)},this).toArray()}.bind(this)),Eg.PromiseArray.create({promise:promise})},_findAll:function(type){var ids=this._recordsForType(type).mapBy("id"),promise=this.get("adapter").findAll(type,ids).then(function(payload){return this._extractPayload(payload),this._recordsForType(type)}.bind(this));return Eg.PromiseArray.create({promise:promise})},_findQuery:function(typeKey,options){var currentIds=this._recordsForType(typeKey).mapBy("id"),promise=this.get("adapter").findQuery(typeKey,options,currentIds).then(function(payload){var ids=payload.ids;return delete payload.ids,this._extractPayload(payload),ids.map(function(id){return this.getRecord(typeKey,id)},this)}.bind(this));return Eg.PromiseArray.create({promise:promise})},hasRecord:function(type,id){return null!==this.getRecord(type,id)},saveRecord:function(record){var _this=this,type=record.typeKey,isNew=record.get("isNew"),tempId=record.get("id");return record.set("isSaving",!0),isNew?this.get("adapter").createRecord(record).then(function(payload){record.set("id",payload.id),record.set("isSaving",!1),delete payload.id;var records=_this.get("_records."+type);return delete records[tempId],records[record.get("id")]={timestamp:(new Date).getTime(),record:record},this._extractPayload(payload),record}.bind(this)):this.get("adapter").updateRecord(record).then(function(payload){return this._extractPayload(payload),record.set("isSaving",!1),record}.bind(this))},deleteRecord:function(record){{var type=record.typeKey,id=record.get("id");this.get("_records."+type)||{}}return record.set("isSaving",!0),record.set("isDeleted",!0),this.get("adapter").deleteRecord(record).then(function(payload){this._extractPayload(payload),record.set("isSaving",!1),delete this.get("_records."+type)[id]}.bind(this))},reloadRecord:function(record){return record.set("isReloading",!0),this.get("adapter").find(record.typeKey,record.get("id")).then(function(payload){return this._extractPayload(payload),record.set("isReloading",!1),record}.bind(this))},_extractPayload:function(payload){Em.keys(payload).forEach(function(typeKey){this.modelForType(typeKey);payload[typeKey].forEach(function(json){var record=this.getRecord(typeKey,json.id);record?record.get("isDirty")||record._loadData(json):this._loadRecord(typeKey,json)},this)},this)}})}(),function(){Eg.Store.reopen({_queuedRelationships:null,_hasQueuedRelationships:function(typeKey,id){for(var queued=Eg.util.values(this.get("_queuedRelationships")),i=0;i<queued.length;i+=1)if(queued[i].get("type2")===typeKey&&queued[i].get("object2")===id)return!0;return!1},_connectQueuedRelationships:function(record){var queued=this.get("_queuedRelationships"),toConnect=this._queuedRelationshipsFor(record.typeKey,record.get("id"));toConnect.forEach(function(relationship){record._connectRelationship(relationship),relationship.set("object2",record),delete queued[relationship.get("id")]}),this.notifyPropertyChange("_queuedRelationships")},_queuedRelationshipsFor:function(typeKey,id){return Eg.util.values(this.get("_queuedRelationships")).filter(function(relationship){return relationship.get("type2")===typeKey&&relationship.get("object2")===id})},_createRelationship:function(type1,relationship1,id1,type2,relationship2,id2,saved){var record1=this.getRecord(type1,id1),record2=this.getRecord(type2,id2);if(null!==record1||null!==record2){if(null===record1){var temp=record1;record1=record2,record2=temp,temp=id1,id1=id2,id2=id1,temp=relationship1,relationship1=relationship2,relationship2=temp}if(null!==relationship1&&!record1._isLinkedTo(relationship1,id2)){var relationship=Eg.Relationship.create({object1:record1,relationship1:relationship1,object2:null===record2?id2:record2,relationship2:relationship2,state:saved?"saved":"new"});record1._connectRelationship(relationship),null!==record2?record2._connectRelationship(relationship):(this.set("_queuedRelationships."+relationship.get("id"),relationship),this.notifyPropertyChange("_queuedRelationships"))}}},_deleteRelationship:function(id){var relationship=Eg.Relationship.getRelationship(id);if(!Em.isNone(relationship)){var object1=relationship.get("object1"),object2=relationship.get("object2");object1._disconnectRelationship(relationship),object2 instanceof Eg.Model?object2._disconnectRelationship(relationship):(delete this.get("_queuedRelationships")[id],this.notifyPropertyChange("_queuedRelationships")),Eg.Relationship.deleteRelationship(id)}},_changeRelationshipState:function(id,state){var relationship=Eg.Relationship.getRelationship(id);if(!Em.isNone(relationship)&&relationship.get("state")!==state){var object1=relationship.get("object1"),object2=relationship.get("object2"),oldHash=Eg.Relationship.stateToHash(relationship.get("state")),newHash=Eg.Relationship.stateToHash(state);relationship.set("state",state),object1.set(newHash+"."+id,object1.get(oldHash+"."+id)),delete object1.get(oldHash)[id],object1.notifyPropertyChange(oldHash),object1.notifyPropertyChange(newHash),object2 instanceof Eg.Model&&(object2.set(newHash+"."+id,object2.get(oldHash+"."+id)),delete object2.get(oldHash)[id],object2.notifyPropertyChange(oldHash),object2.notifyPropertyChange(newHash))}}})}();